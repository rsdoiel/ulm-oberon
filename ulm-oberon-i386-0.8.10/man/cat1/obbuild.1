


User Commands                                          obbuild(1)



NAME
     obbuild - build a static Oberon executable

SYNOPSIS
     obbuild [-a _a_u_t_h] {-b _b_a_s_e_d_i_r}  [-l  _l_o_g_l_e_v_e_l]  [-o  _o_u_t_p_u_t]
     {module}

DESCRIPTION
     _o_b_b_u_i_l_d(_1) takes the given list of modules as core, adds the
     required runtime modules, loads the transitive closure of it
     using _o_b_l_o_a_d(_1), and combines the results to one  statically
     linked executable.

     Please note that before any modules  can  be  loaded,  their
     sources  must  have  been  uploaded to the compiler database
     (CDB) using, for example, _o_b_c_i(_1). Compilation  options  are
     to  be  stored  together  with the sources during the upload
     process to the database.

     Following options are supported:

     -a _a_u_t_h specifies a file containing a persistent  object  of
             type  _S_h_a_r_d_s._L_i_d  that  is to be used for authoriza-
             tion.  By default, the authority file of  the  stan-
             dard installation of _c_d_b_d(_1) is taken.

     -b _b_a_s_e_d_i_r
             defines the base path  of  the  compiler  data  base
             (CDB).  Default  is  /_p_u_b/_c_d_b/_o_b_e_r_o_n.  Note that any
             number of base paths may  be  given.  Multiple  base
             paths are combined through _T_r_a_n_s_l_u_c_e_n_t_N_a_m_e_s(_3), i.e.
             results are written into the  last  base  path,  and
             base  paths specified later on the command line take
             precedence over those given earlier.

     -i _i_n_t_e_n_s_i_t_y
             allows   to   set   the    intensity    level    for
             _S_t_o_r_a_g_e._I_n_t_e_n_s_i_t_y  (see _S_t_o_r_a_g_e(_3)) of the _o_b_l_o_a_d(_1)
             process.

     -l _l_o_g_l_e_v_e_l
             requests log information as generated via  _C_o_m_p_i_l_e_r_-
             _L_o_g_s(_3)  to  be  displayed. This is mainly useful to
             follow the recursive  process  of  building.  A  log
             level of 0 (default) suppresses any logs. Larger log
             levels cause more output to generated.

     -o _o_u_t_p_u_t
             asks the generated executable to be stored into _o_u_t_-
             _p_u_t.





Release 0.5Last change: Last change: 20 September 2004          1






User Commands                                          obbuild(1)



SEE ALSO
     _o_b_c_i(_1)     check-in Oberon sources into the compiler  data-
                 base (CDB)
     _o_b_l_o_a_d(_1)   load results from the CDB or generate them



















































Release 0.5Last change: Last change: 20 September 2004          2



