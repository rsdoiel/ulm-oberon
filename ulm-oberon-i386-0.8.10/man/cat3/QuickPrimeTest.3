


QuickPrimeTest(3)      Ulm's Oberon System      QuickPrimeTest(3)


NNAAMMEE
       QuickPrimeTest - quick primality test for small numbers

SSYYNNOOPPSSIISS
       VAR test: Primes.Test;


DDEESSCCRRIIPPTTIIOONN
       _Q_u_i_c_k_P_r_i_m_e_T_e_s_t  offers  a  quick  primality test for small
       numbers to speed up prime number generators using  primal­
       ity  testing  algorithms like _R_a_b_i_n_M_i_l_l_e_r_(_3_) or _L_e_h_m_a_n_n_(_3_)
       if large primes are needed. Therefore, _Q_u_i_c_k_P_r_i_m_e_T_e_s_t con­
       tains  a list of the first 1028 prime numbers (the largest
       prime in the list is 8191) and checks if the  given  value
       is  divisible  by  or  equal to one of these small primes.
       Thus a lot of numbers can be excluded without starting the
       actual primality testing algorithm.

       During   its  initialization,  _Q_u_i_c_k_P_r_i_m_e_T_e_s_t  creates  an
       interface of the type defined in _P_r_i_m_e_s_(_3_) and connects it
       to _t_e_s_t.

AAUUTTHHOORR
       Frank B.J. Fischer

SSEEEE AALLSSOO
       _P_r_i_m_e_s_(_3_)        general abstraction for primality testing
                        algorithms
       _L_e_h_m_a_n_n_(_3_)       implementation of the  Lehmann  primality
                        testing algorithm
       _R_a_b_i_n_M_i_l_l_e_r_(_3_)   implementation  of  the Rabin-Miller pri­
                        mality testing algorithm
       _P_r_i_m_e_G_e_n_(_3_)      implementation of a prime number  genera­
                        tor























Release 0.5         Last change: 3 April 1997                   1


