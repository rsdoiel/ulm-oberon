SysStacks(3)                  Ulm's Oberon System                 SysStacks(3)



[1mNAME[0m
       SysStacks - examination of coroutine stacks

[1mSYNOPSIS[0m
       TYPE Stack = RECORD END;

       PROCEDURE Open(VAR stack: Stack; cr: Coroutines.Coroutine);
       PROCEDURE Next(VAR stack: Stack;
                      VAR base, top, pc: SysTypes.UntracedAddress) : BOOLEAN;


[1mDESCRIPTION[0m
       [4mSysStacks[24m  offers a system-independent interface for the examination of
       coroutine stacks. This is used by the garbage collection (see  [4mSysStor-[0m
       [4mage(3)[24m)  and  may find applications in debugging scenarios.  [4mOpen[24m opens
       the stack of the coroutine [4mcr[24m for examination.  [4mNext[24m returns, beginning
       from  the  topmost  procedure invocation, the registers pointing to the
       beginning of the activation record ([4mbase[24m), the end  of  the  activation
       record  ([4mtop[24m),  and the associated program counter ([4mpc[24m). Multiple calls
       of [4mNext[24m allow to advance to the calling procedures until the  begin  of
       the stack is reached where [4mNext[24m returns [1mFALSE[22m.

       Please  note  that  neither [4mOpen[24m nor [4mNext[24m allocate storage using [1mNEW [22mor
       other methods. Hence, both  operations  can  be  safely  called  during
       garbage collections or other critical moments.

[1mSEE ALSO[0m
       [4mMemory(3)[24m       address space management
       [4mSysModules(3)[24m   may  be used to map program counters into module / pro-
                       cedure combinations
       [4mSysStorage(3)[24m   garbage collection



Release 0.5               Last change: 24 August 2005             SysStacks(3)
