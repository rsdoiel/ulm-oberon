Signals(3)                    Ulm's Oberon System                   Signals(3)



[1mNAME[0m
       Signals - global conditions

[1mSYNOPSIS[0m
       TYPE Signal = POINTER TO SignalRec;
       TYPE SignalRec = RECORD (Disciplines.ObjectRec) END;

       PROCEDURE Create(VAR signal: Signal);
       PROCEDURE Init(signal: Signal);
       PROCEDURE CreateCondition(VAR condition: Conditions.Condition;
                                 signal: Signal);
       PROCEDURE Raise(signal: Signal);
       PROCEDURE Raised(signal: Signal) : BOOLEAN;
       PROCEDURE WaitFor(signal: Signal);


[1mDESCRIPTION[0m
       Signals represent flags which are initially [1mFALSE[22m, and which at maximum
       have one transition from [1mFALSE [22mto [1mTRUE[22m.  They never  switch  back  from
       [1mTRUE [22mto [1mFALSE[22m.

       Signals  can  be  created using [4mCreate[24m or, if an extension of [4mSignal[24m is
       used, initialized by [4mInit[24m.  [4mRaised[24m returns the  current  state  of  the
       signal.

       [4mRaise[24m  sets  the  signal to [1mTRUE[22m. Multiple invocations of [4mRaise[24m for the
       same signal are permitted.

       [4mCreateCondition[24m creates a condition that allows to wait for  [4msignal[24m  to
       become  [1mTRUE[22m.  [4mWaitFor[24m is a shortcut for the simple combination of [4mCre-[0m
       [4mateCondition[24m and a corresponding [4mTasks.WaitFor[24m.

[1mSEE ALSO[0m
       [4mConditions(3)[24m   general interface for wait conditions



Release 0.5              Last change: 19 February 2004              Signals(3)
