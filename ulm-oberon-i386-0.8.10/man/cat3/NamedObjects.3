


NamedObjects(3)        Ulm's Oberon System        NamedObjects(3)


NNAAMMEE
       NamedObjects  -  add  Names(3)  functionality to arbitrary
       objects

SSYYNNOOPPSSIISS
       TYPE Object = Services.Object;
       TYPE ErrorEvent = POINTER TO ErrorEventRec;
       TYPE ErrorEventRec =
          RECORD
             (Events.EventRec)
             errorcode: SHORTINT;
          END;
       VAR errormsg: ARRAY errorcodes OF Events.Message;
       VAR error: Events.EventType;

       PROCEDURE Create(VAR node: Names.Node; object: Object);
       PROCEDURE Destroy(node: Names.Node): BOOLEAN;
       PROCEDURE Get(node: Names.Node; VAR object: Object;
                            errors: RelatedEvents.Object): BOOLEAN;
       PROCEDURE GuardedGet(node: Names.Node; guard: Services.Type;
                            VAR object: Object;
                            errors: RelatedEvents.Object): BOOLEAN;


DDEESSCCRRIIPPTTIIOONN
       _N_a_m_e_d_O_b_j_e_c_t_s allows to supply arbitrary extensions of _S_e_r_­
       _v_i_c_e_s_._O_b_j_e_c_t  with  functionality  of _N_a_m_e_s_._N_o_d_e by way of
       attaching filter objects.

       _C_r_e_a_t_e creates a node representing _o_b_j_e_c_t, i.e.,  messages
       sent  to  _n_o_d_e  will  reach _o_b_j_e_c_t, too.  If _o_b_j_e_c_t is NNIILL
       _C_r_e_a_t_e creates a node representing itself.

       In order not to introduce a new termination method for the
       original  object  via _N_a_m_e_s_._D_e_s_t_r_o_y, destroy permission of
       _n_o_d_e is especially restricted.  A filter object  _n_o_d_e  can
       however be revoked with _D_e_s_t_r_o_y.

       _G_e_t  assigns  _o_b_j_e_c_t  the  object  which is represented by
       _n_o_d_e.  _G_u_a_r_d_e_d_G_e_t does the same, but only if the  object's
       type is an extension of _g_u_a_r_d.

DDIIAAGGNNOOSSTTIICCSS
       All procedures with BBOOOOLLEEAANN results return TTRRUUEE on succes,
       otherwise FFAALLSSEE.  Following error codes are implemented:
       _n_o_O_b_j_e_c_t           node is not representing a named object
       _o_b_j_e_c_t_N_a_m_e_d        object   is   already   represented  by
                          another node
       _t_y_p_e_G_u_a_r_d_F_a_i_l_u_r_e   _G_u_a_r_d_e_d_G_e_t failed  due  to  type  guard
                          violation

SSEEEE AALLSSOO
       _N_a_m_e_s_(_3_)           abstraction for name hierarchies




Release 0.5         Last change: 22 July 1996                   1





NamedObjects(3)        Ulm's Oberon System        NamedObjects(3)


       _S_e_r_v_i_c_e_s_(_3_)        type-independent  definition  of exten­
                          sions
       _S_h_a_r_d_s_(_3_)          abstraction for authorization protocols
       _R_e_l_a_t_e_d_E_v_e_n_t_s_(_3_)   error event handling

BBUUGGSS
       Does not yet use _F_o_r_w_a_r_d_e_r_s_(_3_), for historical reasons.

AAUUTTHHOORR
       Martin Hasch, University of Ulm















































Release 0.5         Last change: 22 July 1996                   2


