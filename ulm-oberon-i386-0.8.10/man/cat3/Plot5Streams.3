Plot5Streams(3)               Ulm's Oberon System              Plot5Streams(3)



[1mNAME[0m
       Plot5Streams - traditional Berkeley plot streams

[1mSYNOPSIS[0m
       PROCEDURE Create(VAR plotter: Plotters.Plotter; out: Streams.Stream);


[1mDESCRIPTION[0m
       [4mPlot5Streams[24m  provides  an implementation of [4mPlotters(3)[24m that generates
       traditional Berkeley plot streams. Independent from the current  archi-
       tecture, all binary numbers are generated in little-endian format.

       Some options for viewing Berkeley plot streams:

       ·      The  [4mplot(1)[24m  command  from the GNU plotutils is able to convert
              Berkeley plot streams to a large  number  of  file  formats  and
              devices.  Note,  however,  that  ``-l''  has  to be specified as
              option because by default Berkeley plot streams  are  only  cor-
              rectly recognized on little-endian architectures.

       ·      The  BSD  [4mplot(1b)[24m  utility  allows to convert plot streams to a
              small number of formats.

       ·      The Solaris [4mpostplot(1)[24m filter allows to  convert  plot  streams
              into  PostScript. This filter is part of the SUNWpsf package and
              installed as [4m/usr/lib/lp/postscript/postplot[24m.

       [4mCreate[24m creates a plotter that generates the Berkeley plot  instructions
       onto  [4mout[24m.  The  plotter acts as forwarding object in the sense of [4mFor-[0m
       [4mwarders(3)[24m, i.e. the plotter dies if [4mout[24m terminates, and  error  events
       of [4mout[24m are forwarded to [4mplotter[24m.

[1mDIAGNOSTICS[0m
       All  error  events  generated by the underlying stream are forwarded to
       the plotter object. In case of failures, all subsequent operations  are
       silently suppressed.

[1mEXAMPLE[0m
       Following  procedure  opens  a plot stream that sends all plot instruc-
       tions to the [4mplot(1)[24m utility using a pipeline:

       PROCEDURE CreateXPlotter(VAR plotter: Plotters.Plotter;
                                errors: RelatedEvents.Object) : BOOLEAN;
          VAR
             out: Streams.Stream;
       BEGIN
          IF ~UnixPipes.Open(out, "/usr/local/bin/plot -l -T X",
                UnixPipes.write, Streams.onebuf, errors) THEN
             RETURN FALSE
          END;
          Plot5Streams.Create(plotter, out);
       END CreateXPlotter;

       Note that [4mout[24m is automatically closed as soon as [4mplotter[24m closes because
       [4mplotter[24m is the only object that references [4mout[24m.

[1mSEE ALSO[0m
       [4mplot(1)[24m       GNU plot utility
       [4mplot(1b)[24m      traditional BSD plot utility
       [4mpostplot(1)[24m   Solaris plot stream to PostScript converter
       [4mPlotters(3)[24m   general interface for simple plotters

[1mBUGS[0m
       Note  that different plot utilities come with different interpretations
       and different bugs. GNU [4mplot(1)[24m, for  example,  redefines  the  current
       position after drawing an arc while [4mpostplot(1)[24m does not change it.



Release 0.5               Last change: 22 April 2004           Plot5Streams(3)
