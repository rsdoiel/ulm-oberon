


UnixMappedFiles(3)     Ulm's Oberon System     UnixMappedFiles(3)


NNAAMMEE
       UnixMappedFiles - mapping of files into virtual memory

SSYYNNOOPPSSIISS
       CONST read = UnixFiles.read;
       CONST write = UnixFiles.write;
       CONST rdwr = UnixFiles.rdwr;
       TYPE Mode = SHORTINT; (* read..rdwr *)

       CONST illegalMode = 0;
       CONST posOutOfRange = 1;
       CONST beyondEndOfStream = 2;
       CONST invalidRange = 3;
       CONST errors = 4;
       TYPE ErrorCode = SHORTINT; (* illegalMode..beyondEndOfStream *)
       TYPE ErrorEvent = POINTER TO ErrorEventRec;
       TYPE ErrorEventRec =
          RECORD
             (Events.EventRec)
             errorcode: ErrorCode;
          END;
       VAR error: Events.EventType;
       VAR errormsg: ARRAY errors OF Events.Message;

       PROCEDURE Open(VAR s: Streams.Stream; filename: ARRAY OF CHAR;
                      mode: Mode; errors: RelatedEvents.Object) : BOOLEAN;
       PROCEDURE OpenFd(VAR s: Streams.Stream; fd: SysTypes.File;
                        mode: Mode; offset, length: Streams.Count;
                        errors: RelatedEvents.Object) : BOOLEAN;


DDEESSCCRRIIPPTTIIOONN
       _U_n_i_x_M_a_p_p_e_d_F_i_l_e_s  allows  to  map a file or a memory object
       (in the sense of _m_m_a_p_(_2_)) into virtual memory  for  faster
       access  than  traditional  i/o operations.  Note, however,
       that speed improvements are achieved for larger files only
       because  of  the greater overhead at opening time.  Unlike
       the streams of _U_n_i_x_F_i_l_e_s_(_3_),  streams  of  _U_n_i_x_M_a_p_p_e_d_F_i_l_e_s
       can  neither shrink (i.e. _S_t_r_e_a_m_s_._T_r_u_n_c is not supported),
       nor be extended.  _U_n_i_x_M_a_p_p_e_d_F_i_l_e_s  supports  _S_u_b_S_t_r_e_a_m_s_(_3_)
       by a specific implementation.

       _O_p_e_n  maps  the  given  _f_i_l_e_n_a_m_e  into  virtual memory and
       returns a stream for it.   _O_p_e_n_F_d  takes  the  given  file
       descriptor _f_d as memory object (must be valid for _m_m_a_p_(_2_))
       and maps the subrange [[_o_f_f_s_e_t, _o_f_f_s_e_t++_l_e_n_g_t_h)) into memory.
       Independent  from  _o_f_f_s_e_t,  valid  positions of the stream
       returned range from 00 to _l_e_n_g_t_h.

DDIIAAGGNNOOSSTTIICCSS
       Many errors may be returned by the underlying modules _M_e_m_­
       _o_r_y_(_3_),   _S_y_s_M_e_m_o_r_y_(_3_),  and  _S_y_s_I_O_(_3_).   Following  error
       events may be generated by _U_n_i_x_M_a_p_p_e_d_F_i_l_e_s:




Release 0.5        Last change: 6 December 1996                 1





UnixMappedFiles(3)     Ulm's Oberon System     UnixMappedFiles(3)


       _i_l_l_e_g_a_l_M_o_d_e         An invalid mode (neither _r_e_a_d,  _w_r_i_t_e,
                           nor _r_d_w_r) was given to _O_p_e_n or _O_p_e_n_F_d.
       _p_o_s_O_u_t_O_f_R_a_n_g_e       Seek  operations  outside  the   valid
                           range  from 00 to _l_e_n_g_t_h are not valid.
       _b_e_y_o_n_d_E_n_d_O_f_S_t_r_e_a_m   A write operation was attempted beyond
                           the stream length.  In this case, even
                           a partial write will not be done,  and
                           00 or FFAALLSSEE will be returned instead.
       _i_n_v_a_l_i_d_R_a_n_g_e        This  error  will  be returned on cre­
                           ation of substreams with a range which
                           is not inside [[00.._l_e_n_g_t_h]].

       An  assertion of _O_p_e_n_F_d checks _o_f_f_s_e_t and _l_e_n_g_t_h for being
       non-negative.

SSEEEE AALLSSOO
       _M_e_m_o_r_y_(_3_)       address space management
       _S_u_b_S_t_r_e_a_m_s_(_3_)   streams representing  intervals  of  other
                       streams
       _S_t_r_e_a_m_s_(_3_)      general stream operations
       _S_y_s_M_e_m_o_r_y_(_3_)    interface to _m_m_a_p_(_2_) and related calls
       _U_n_i_x_F_i_l_e_s_(_3_)    more general interface to UNIX files

BBUUGGSS
       Note  that  the  address space occupied by the mapped file
       can be regained by _S_t_r_e_a_m_s_._C_l_o_s_e only and never due to the
       garbage collector (see _S_y_s_S_t_o_r_a_g_e_(_3_)).






























Release 0.5        Last change: 6 December 1996                 2


