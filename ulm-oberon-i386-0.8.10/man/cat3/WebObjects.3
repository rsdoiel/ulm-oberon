


WebObjects(3)          Ulm's Oberon System          WebObjects(3)


NNAAMMEE
       WebObjects - abstraction for world wide web objects

SSYYNNOOPPSSIISS
       CONST doCache = 0; privatCache = 1; noCache = 2; noStore = 3;
       CONST noTransform = 4; mustRevalidate = 5; proxyRevalidate = 6;
       CONST cacheMechanisms = 7;
       TYPE Object = POINTER TO ObjectRec;
       TYPE ObjectRec =
          RECORD
             (Services.ObjectRec)
          END;
       TYPE Handle = POINTER TO HandleRec;
       TYPE HandleRec =
          RECORD
             (Disciplines.ObjectRec)
             object: Object;
             error: BOOLEAN;
          END;

       TYPE CreateHandleProc = PROCEDURE (VAR handle: Handle; object: Object;
                                          search, body: Streams.Stream;
                                          errors: RelatedEvents.Object): BOOLEAN;
       TYPE GetChallengeProc = PROCEDURE (handle: Handle;
                                          VAR scheme, realm, param: ARRAY OF CHAR);
       TYPE AuthenticateProc = PROCEDURE (handle: Handle;
                                          scheme, param: Streams.Stream): BOOLEAN;
       TYPE GetMD5HashValueProc = PROCEDURE (handle: Handle;
                                             VAR value: OneWayHashes.Value);
       TYPE GetLanguagesProc = PROCEDURE (handle: Handle; VAR languages: ARRAY OF CHAR);
       TYPE GetEncodingProc = PROCEDURE (handle: Handle; VAR encoding: ARRAY OF CHAR);
       TYPE GetCharsetProc = PROCEDURE (handle: Handle; VAR charset: ARRAY OF CHAR);
       TYPE GetMediaTypeProc = PROCEDURE (handle: Handle;
                                          VAR type, subtype, param: ARRAY OF CHAR);
       TYPE GetUserAgentProc = PROCEDURE (handle: Handle;
                                          VAR userAgent: ARRAY OF CHAR);
       TYPE GetLengthProc = PROCEDURE (handle: Handle; VAR length: LONGINT);
       TYPE GetBaseProc = PROCEDURE (handle: Handle; VAR base: InetURLs.URL);
       TYPE GetLocationProc = PROCEDURE (handle: Handle; VAR location: InetURLs.URL);
       TYPE GetCacheMechanismProc = PROCEDURE (handle: Handle; VAR mechanism: SET);
       TYPE GetEntityTagProc = PROCEDURE (handle: Handle;
                                          VAR eTag: ARRAY OF CHAR; VAR weak: BOOLEAN);
       TYPE GetExpireDateProc = PROCEDURE (handle: Handle; VAR date: Times.Time);
       TYPE GetLastModifiedDateProc = PROCEDURE (handle: Handle; VAR date: Times.Time);
       TYPE SetRangeProc = PROCEDURE (handle: Handle;
                                      begin, end: Streams.Count): BOOLEAN;
       TYPE WriteBodyProc = PROCEDURE (handle: Handle; body: Streams.Stream);

       TYPE Interface = POINTER TO InterfaceRec;
       TYPE InterfaceRec =
          RECORD
             (Objects.ObjectRec)
             createHandle: CreateHandleProc;
             getChallenge: GetChallengeProc;



Release 0.5         Last change: 24 April 1998                  1





WebObjects(3)          Ulm's Oberon System          WebObjects(3)


             authenticate: AuthenticateProc;
             getMD5HashValue: GetMD5HashValueProc;
             getLanguages: GetLanguagesProc;
             getEncoding: GetEncodingProc;
             getCharset: GetCharsetProc;
             getMediaType: GetMediaTypeProc;
             getUserAgent: GetUserAgentProc;
             getLength: GetLengthProc;
             getBase: GetBaseProc;
             getLocation: GetLocationProc;
             getCacheMechanism: GetCacheMechanismProc;
             getEntityTag: GetEntityTagProc;
             getExpireDate: GetExpireDateProc;
             getLastModifiedDate: GetLastModifiedDateProc;
             setRange: SetRangeProc;
             writeBody: WriteBodyProc;
          END;

       CONST createHandleCap = 0;
       CONST clientAuthenicateCap = 1;
       CONST getMD5HashValueCap = 2;
       CONST getLanguagesCap = 3;
       CONST getEncodingCap = 4;
       CONST getCharsetCap = 5;
       CONST getMediaTypeCap = 6;
       CONST getUserAgentCap = 7;
       CONST getLengthCap = 8;
       CONST getBaseCap =9;
       CONST getLocationCap = 10;
       CONST getCacheMechanismCap = 11;
       CONST getEntityTagCap = 12;
       CONST getExpireDateCap = 13;
       CONST getLastModifiedDateCap = 14;
       CONST setRangeCap = 15;
       CONST writeBodyCap = 16;
       CONST allCaps = {createHandleCap .. writeBodyCap};
       CONST strictCaps = {createHandleCap, writeBodyCap};
       TYPE Capability = SHORTINT;
       TYPE CapabilitySet = SET; (* of Capability *)

       PROCEDURE Init(object: Object; if: Interface; caps: CapabilitySet);
       PROCEDURE Capabilities(object: Object): CapabilitySet;
       PROCEDURE CreateHandle(VAR handle: Handle; object: Object;
                              search, body: Streams.Stream;
                              errors: RelatedEvents.Object): BOOLEAN;
       PROCEDURE GetChallenge(handle: Handle;
                              VAR scheme, realm, param: ARRAY OF CHAR);
       PROCEDURE Authenticate(handle: Handle;
                              scheme, param: Streams.Stream): BOOLEAN;
       PROCEDURE GetMD5HashValue(handle: Handle; VAR value: OneWayHashes.Value);
       PROCEDURE GetLanguages(handle: Handle; VAR languages: ARRAY OF CHAR);
       PROCEDURE GetEncoding(handle: Handle; VAR encoding: ARRAY OF CHAR);
       PROCEDURE GetCharset(handle: Handle; VAR charset: ARRAY OF CHAR);
       PROCEDURE GetMediaType(handle: Handle;



Release 0.5         Last change: 24 April 1998                  2





WebObjects(3)          Ulm's Oberon System          WebObjects(3)


                              VAR type, subtype, param: ARRAY OF CHAR);
       PROCEDURE GetUserAgent(handle: Handle; VAR userAgent: ARRAY OF CHAR);
       PROCEDURE GetLength(handle: Handle; VAR length: LONGINT);
       PROCEDURE GetBase(handle: Handle; VAR base: InetURLs.URL);
       PROCEDURE GetLocation(handle: Handle; VAR location: InetURLs.URL);
       PROCEDURE GetCacheMechanism(handle: Handle; VAR mechanism: SET);
       PROCEDURE GetEntityTag(handle: Handle;
                              VAR eTag: ARRAY OF CHAR; VAR weak: BOOLEAN);
       PROCEDURE GetExpireDate(handle: Handle; VAR date: Times.Time);
       PROCEDURE GetLastModifiedDate(handle: Handle; VAR date: Times.Time);
       PROCEDURE SetRange(handle: Handle; begin, end: LONGINT): BOOLEAN;
       PROCEDURE WriteBody(handle: Handle; body: Streams.Stream);


DDEESSCCRRIIPPTTIIOONN
       _W_e_b_O_b_j_e_c_t_s  defines an abstraction for objects that may be
       represented as pages in the WWW.  Web objects  are  mainly
       accessed by _W_e_b_H_a_n_d_l_e_r_s_(_3_) which processes access requests
       that are  represented  by  handles  in  this  abstraction.
       Access  to  individual  objects  can  be  controlled by an
       authentication scheme.

   PPrroovviiddiinngg WWeebb OObbjjeeccttss
       Implementations  must  initialize  new  instances  of  web
       objects  using  _I_n_i_t,  specifying  a  set  of capabilities
       (_c_a_p_s) and an interface (_i_f) containing  interface  proce­
       dures.   At  least  _c_r_e_a_t_e_H_a_n_d_l_e  and  _w_r_i_t_e_B_o_d_y are to be
       implemented.  All  other  procedures  are  optional.   All
       interface  procedures  have  the  same  semantics as their
       counter parts described below.

       Note that web objects may be accessed in parallel by  mul­
       tiple  parties,  each  using its own handle.  Hence, state
       maintaining web objects have to take care of  synchronisa­
       tion.

       The _e_r_r_o_r flag of the handle is initially set to FFAALLSSEE and
       must be set to TTRRUUEE by any  of  the  interface  procedures
       that  detects errors and generates error events which must
       be related to _h_a_n_d_l_e.

   UUssiinngg WWeebb OObbjjeeccttss
       _C_a_p_a_b_i_l_i_t_i_e_s returns the  capabilities  of  _o_b_j_e_c_t.   Note
       that  all  operations  may  be called even if they are not
       implemented (and not included in the set of capabilities).
       In this case reasonable default values will be returned.

       For  each  new  access to be processed, a handle has to be
       created by _C_r_e_a_t_e_H_a_n_d_l_e.  Parameters may be passed via the
       _s_e_a_r_c_h  stream representing the associated part in the URL
       (see, for example, _I_n_e_t_H_T_T_P_U_R_L_s_(_3_)) and  as  POST  message
       via  _b_o_d_y.   Both  streams may be set to NNIILL indicating an
       empty text.




Release 0.5         Last change: 24 April 1998                  3





WebObjects(3)          Ulm's Oberon System          WebObjects(3)


       _G_e_t_C_h_a_l_l_e_n_g_e returns the _s_c_h_e_m_e,  _r_e_a_l_m  (without  quotes)
       and further parameters (_p_a_r_a_m) to build the challenge of a
       response. If you don't need an  authentication  to  access
       the  data  of the object, _s_c_h_e_m_e is empty, _r_e_a_l_m and _p_a_r_a_m
       are undefined.

       _A_u_t_h_e_n_t_i_c_a_t_e returns TTRRUUEE if the Authentication for _s_c_h_e_m_e
       and  _p_a_r_a_m is correct. Both parameters are read from posi­
       tion 0.

       _G_e_t_M_D_5_H_a_s_h_V_a_l_u_e returns, if supported, a MD5 hash value of
       the  byte  stream _W_r_i_t_e_B_o_d_y would return.  _v_a_l_u_e is set to
       NNIILL otherwise.

       _G_e_t_L_a_n_g_u_a_g_e_s returns the language of the intended audience
       in  _l_a_n_g_u_a_g_e_s in conformance to RFC 1766.  An empty string
       represents an unrestricted audience.

       _G_e_t_E_n_c_o_d_i_n_g returns the _e_n_c_o_d_i_n_g (e.g. gzip, compress)  of
       the object. An empty string means there is no encoding.

       _G_e_t_C_h_a_r_s_e_t  returns  the  _c_h_a_r_s_e_t  of the object. An empty
       value means that the standard charset ISO 8859-1 is  used.

       _G_e_t_M_e_d_i_a_T_y_p_e  returns the media type of the object includ­
       ing the sub type and optional parameters.  Note  that  the
       media type may be empty indicating that the interpretation
       of the contents is left up to the receiver of the  message
       body.

       _G_e_t_U_s_e_r_A_g_e_n_t  returns  the  user agent the message body is
       intended for. An empty value means that the  message  body
       is open for all user agents.

       _G_e_t_L_e_n_g_t_h returns the length of the body.  Negative values
       may be returned if the length of the message  body  cannot
       be computed in advance.

       _G_e_t_B_a_s_e  returns the _b_a_s_e (absolute URL) for relative URLs
       in the body or NNIILL if undefined.

       _G_e_t_L_o_c_a_t_i_o_n returns,  if  defined,  the  _l_o_c_a_t_i_o_n  of  the
       resource as URL, and NNIILL otherwise.

       _G_e_t_C_a_c_h_e_M_e_c_h_a_n_i_s_m  gives  a  recommendation  how  a  cache
       should treat the data. Mechanism is a set of _d_o_C_a_c_h_e  (the
       response  may  be  cached even if it normally  wouldn't be
       cached), _p_r_i_v_a_t_C_a_c_h_e (the response must not be  cached  in
       shared caches), _n_o_C_a_c_h_e (the response must not be cached),
       _n_o_S_t_o_r_e (caches should not store the data in  non-volatile
       storage), _n_o_T_r_a_n_s_f_o_r_m (caches are not allowed to transform
       the message), _m_u_s_t_R_e_v_a_l_i_d_a_t_e (caches must revalidate stale
       cache  entries)  and  _p_r_o_x_y_R_e_v_a_l_i_d_a_t_e (shared caches, like
       proxies must revalidate stale cache entries).



Release 0.5         Last change: 24 April 1998                  4





WebObjects(3)          Ulm's Oberon System          WebObjects(3)


       _G_e_t_E_n_t_i_t_y_T_a_g provides an entity-tag to support caches.  If
       it  is  a  weak  tag  the parameter _w_e_a_k will be TTRRUUEE.  If
       there is no entity-tag for the  object,  an  empty  string
       will be returned in _e_T_a_g.

       _G_e_t_E_x_p_i_r_e_D_a_t_e  returns,  if  defined, a date after which a
       response should be considered as stale, and NNIILL otherwise.

       _G_e_t_L_a_s_t_M_o_d_i_f_i_e_d_D_a_t_e returns the date the resource was last
       modified or NNIILL if undefined.

       _S_e_t_R_a_n_g_e limits the result of  _W_r_i_t_e_B_o_d_y  to  an  interval
       starting at position _b_e_g_i_n (including) and ending with _e_n_d
       (excluding).  _S_e_t_R_a_n_g_e will return FFAALLSSEE if it is not pos­
       sible  to  handle  ranges  with  that  object.   Note that
       _G_e_t_L_e_n_g_t_h is not affected by such a limitation.

       _W_r_i_t_e_B_o_d_y writes the object body to stream _b_o_d_y,  possibly
       limited by a former call of _S_e_t_R_a_n_g_e.

DDIIAAGGNNOOSSTTIICCSS
       _W_e_b_O_b_j_e_c_t_s  does  not  generate  error  events  by itself.
       Underlying  implementations,  however,  are  expected   to
       relate  their  error events to _h_a_n_d_l_e or to _e_r_r_o_r_s in case
       of _C_r_e_a_t_e_H_a_n_d_l_e (see _R_e_l_a_t_e_d_E_v_e_n_t_s_(_3_)),

       Additionally, the _e_r_r_o_r component of a handle  is  set  to
       TTRRUUEE in case of errors.

SSEEEE AALLSSOO
       _M_D_5_(_3_)             MD5 check sums
       _R_e_l_a_t_e_d_E_v_e_n_t_s_(_3_)   error handling
       _S_t_r_e_a_m_s_(_3_)         stream operations
       _T_i_m_e_s_(_3_)           time stamps
       _I_n_e_t_U_R_L_s_(_3_)        addresses for web objects

AAUUTTHHOORR
       Manfred Rueß, University of Ulm,
       the revisions are due to Andreas Borchert.


















Release 0.5         Last change: 24 April 1998                  5


