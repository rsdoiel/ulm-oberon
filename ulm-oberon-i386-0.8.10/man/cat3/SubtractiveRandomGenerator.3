


SubtractiveRandomGeneratUolrm('3s)Oberon SSyusbttermactiveRandomGenerator(3)


NNAAMMEE
       SubtractiveRandomGenerator  -  implementation  of a pseudo
       random number generator

SSYYNNOOPPSSIISS
       PROCEDURE Create(VAR sequence: Random.Sequence; seed: LONGINT);


DDEESSCCRRIIPPTTIIOONN
       _S_u_b_t_r_a_c_t_i_v_e_R_a_n_d_o_m_G_e_n_e_r_a_t_o_r  offers  an  implementation  of
       _R_a_n_d_o_m_G_e_n_e_r_a_t_o_r_s_(_3_).  The implementation uses the subtrac­
       tive method taken from  Knuth,  _S_e_m_i_n_u_m_e_r_i_c_a_l  _A_l_g_o_r_i_t_h_m_s,
       3.2.2 and 3.6. This pseudo random number generator is rec­
       ommended if a large quantity of uniformly distributed ran­
       dom numbers is needed. The produced random numbers are not
       cryptographically secure.

       _C_r_e_a_t_e_S_e_q_u_e_n_c_e creates and initializes a new  sequence  of
       pseudo  random  numbers.  The  sequence  of random numbers
       depends on _s_e_e_d.

AAUUTTHHOORR
       Frank B.J. Fischer

SSEEEE AALLSSOO
       _R_a_n_d_o_m_G_e_n_e_r_a_t_o_r_s_(_3_)   general abstraction for pseudo  ran­
                             dom number generation
       _B_B_S_(_3_)                a  cryptographically  secure  pseudo
                             random generator




























Release 0.5        Last change: 11 October 1997                 1


