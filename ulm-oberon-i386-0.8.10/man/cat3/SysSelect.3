SysSelect(3)                  Ulm's Oberon System                 SysSelect(3)



[1mNAME[0m
       SysSelect - synchronous I/O multiplexing

[1mSYNOPSIS[0m
       TYPE FileDescriptorSet = RECORD (Objects.ObjectRec) END;
       VAR emptyset: FileDescriptorSet;
       PROCEDURE CreateSet(VAR fdset: FileDescriptorSet);
       PROCEDURE Incl(VAR fdset: FileDescriptorSet; fd: SysTypes.File);
       PROCEDURE Excl(VAR fdset: FileDescriptorSet; fd: SysTypes.File);
       PROCEDURE In(fdset: FileDescriptorSet; fd: SysTypes.File) : BOOLEAN;
       PROCEDURE SelectWithTimeLimit(
                    VAR readfds, writefds, exceptfds: FileDescriptorSet;
                    timeout: SysTime.TimeVal; VAR ready: INTEGER;
                    errors: RelatedEvents.Object;
                    retry: BOOLEAN; VAR interrupted: BOOLEAN) : BOOLEAN;
       PROCEDURE Select(VAR readfds, writefds, exceptfds: FileDescriptorSet;
                        VAR ready: INTEGER;
                        errors: RelatedEvents.Object;
                        retry: BOOLEAN; VAR interrupted: BOOLEAN) : BOOLEAN;
       PROCEDURE Poll(VAR readfds, writefds, exceptfds: FileDescriptorSet;
                      VAR ready: INTEGER;
                      errors: RelatedEvents.Object) : BOOLEAN;
       PROCEDURE InputAvailable(fd: SysTypes.File;
                                errors: RelatedEvents.Object) : BOOLEAN;


[1mDESCRIPTION[0m
       [4mSysSelect[24m  interfaces the [4mselect(2)[24m system call.  This interface is now
       deprecated. [4mSysPoll(3)[24m should be used instead.

       [4mSysSelect[24m allows to examine sets of file descriptors whether  they  are
       ready  for reading or writing or if exceptional conditions are pending.
       Further, the process can  be  blocked  until  one  of  the  given  file
       descriptors becomes ready for the intended operation.

       File  descriptor  sets  are completely covered by [4mSysSelect[24m because the
       size of file descriptor sets is not known in advance (and may even vary
       at  runtime).   [4mCreateSet[24m  creates  a new set and initializes it to the
       empty set.  [4mIncl[24m and [4mExcl[24m allow to include and exclude individual  mem-
       bers.  [4mIn[24m checks [4mfd[24m to be a member of [4mfdset[24m.

       [4mSelectWithTimeLimit[24m  returns  either if the time limit expires ([4mready[24m =
       [1m0[22m) or if at least one of the file descriptors gets ready (in this  case
       [4mready[24m  equals  the  number of ready file descriptors).  [4mPoll[24m works like
       [4mSelectWithTimeLimit[24m with a time limit of [1m0[22m.

       [4mSelect[24m blocks until one of the file descriptors  gets  ready  (no  time
       limit).   [4mInputAvailable[24m  returns  [1mTRUE [22mif a subsequent [4mSysIO.Read[24m does
       not block.

[1mDIAGNOSTICS[0m
       System call errors cause [1mFALSE [22mto be returned and  lead  to  events  of
       [4mSysErrors(3)[24m.  The [4merrors[24m parameter is passed to [4mSysErrors.Raise[24m.

       The  longtime  variants of the system call may be interrupted.  Usually
       (if [4mretry[24m = [1mFALSE[22m), this causes  the  appropriate  error  event  to  be
       raised  (error  code [4mSysErrors.intr[24m) and the system call to be aborted.
       However, if [4mretry[24m is [1mTRUE[22m, the system call will be  repeated  until  no
       interrupt occurs.  [4minterrupt[24m indicates in both cases whether interrupts
       occurred or not.

[1mSEE ALSO[0m
       [4mselect(2)[24m               underlying system call
       [4mSysErrors(3)[24m            error handling
       [4mSysIO(3)[24m                read and write operations
       [4mSysPoll(3)[24m              newer interface for synchronous I/O  multiplex-
                               ing
       [4mSysSockets(3)[24m           creation and preparation of sockets



Release 0.5               Last change: 25 August 2005             SysSelect(3)
