


StreamCiphers(3)       Ulm's Oberon System       StreamCiphers(3)


NNAAMMEE
       StreamCiphers - abstraction for stream ciphers

SSYYNNOOPPSSIISS
       TYPE Cipher = POINTER TO CipherRec;
       TYPE CipherRec = RECORD (Ciphers.CipherRec) END;
       PROCEDURE Create (VAR key: Cipher; s: Streams.Stream);


DDEESSCCRRIIPPTTIIOONN
       _S_t_r_e_a_m_C_i_p_h_e_r_s  supports  the  use of stream ciphers. Since
       the key of a stream cipher  can  be  viewed  as  a  stream
       itself,  only one procedure is exported which interprets a
       stream as a cipher.

       _C_r_e_a_t_e creates a cipher _k_e_y out of a given stream  _s.   An
       initialisation  of  the  cipher _k_e_y is not necessary since
       all stream ciphers operate the same way: one byte  of  the
       input  is  combined  with one byte of the key by a bitwise
       XOR and then sent to the output.

SSEEEE AALLSSOO
       _A_s_y_m_m_e_t_r_i_c_C_i_p_h_e_r_s_(_3_)   abstraction for the use  of  public
                              key ciphers
       _B_l_o_c_k_C_i_p_h_e_r_s_(_3_)        abstraction  for  the  use of block
                              ciphers
       _C_i_p_h_e_r_s_(_3_)             abstraction for general ciphers and
                              crypto systems

AAUUTTHHOORR
       Michael Szczuka, University of Ulm


























Release 0.5       Last change: 14 November 1995                 1


