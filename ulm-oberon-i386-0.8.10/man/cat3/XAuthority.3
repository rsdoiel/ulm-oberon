XAuthority(3)                 Ulm's Oberon System                XAuthority(3)



[1mNAME[0m
       XAuthority - retrieval of X authorization records

[1mSYNOPSIS[0m
       CONST familyInternet = 0;
       CONST familyDECnet = 1;
       CONST familyChaos = 2;
       CONST familyLocal = 256;
       CONST familyWild = 65535;
       TYPE Family = INTEGER;           (* one of familyXXX *)
       CONST maxfieldlen = 512;         (* maximal field length *)
       TYPE String = ARRAY maxfieldlen OF CHAR;
       TYPE Field = POINTER TO FieldRec;
       TYPE FieldRec =
          RECORD
             len: INTEGER;
             string: String;
          END;
       TYPE AuthRec =
          RECORD
             family: Family;
             address: Field;
             number: Field;
             name: Field;
             data: Field;
          END;

       CONST authFileNotFound = 0;
       CONST noMatchingEntryFound = 1;
       CONST undefinedHome = 2;
       CONST errorcodes = 3;
       TYPE ErrorEvent = POINTER TO ErrorEventRec;
       TYPE ErrorEventRec =
          RECORD
             (Events.EventRec)
             errorcode: SHORTINT;
          END;
       VAR error: Events.EventType;
       VAR errormsg: ARRAY errorcodes OF Events.Message;

       PROCEDURE GetAuthByAddr(VAR auth: AuthRec;
                               errors: RelatedEvents.Object) : BOOLEAN;


[1mDESCRIPTION[0m
       [4mXAuthority[24m allows to access the X authorization database.  Usually, the
       X11 or X11/NeWS window server require the correct authorization  record
       to be passed after establishing a connection.

       Authorization records consist of an address which designates the window
       server (net address family, net address and  display  number)  and  the
       associated  authorization  fields  which  consist  of a name and a data
       field.  Authorization records are kept by individual users in an autho-
       rization file (usually [4m$HOME/.Xauthority[24m).

       [4mGetAuthByAddr[24m  scans  the authorization file for an entry which matches
       the family, the address, the number and the name  of  [4mauth[24m.   Wildcards
       (i.e.  [4mfamilyWild[24m  or  empty fields) matches anything.  On success, the
       record is copied back to [4mauth[24m and [4mGetAuthByAddr[24m returns [1mTRUE[22m.

[1mDIAGNOSTICS[0m
       Errors lead to events which are related to the [4merrors[24m parameter:
       [4mauthFileNotFound[24m       No  authorization  file  has  been  found.    By
                              default,  the  file is looked for in [4m$HOME/.Xau-[0m
                              [4mthority[24m,  or,  if  [4mXAUTHORITY[24m   is   given,   in
                              [4m$XAUTHORITY[24m.
       [4mnoMatchingEntryFound[24m   No  matching  entry has been found in the autho-
                              rization file.
       [4mundefinedHome[24m          [4mHOME[24m is not defined in the environment.

[1mENVIRONMENT[0m
       [4mHOME[24m                   location of the home directory
       [4mXAUTHORITY[24m             location of the authority database

[1mFILES[0m
       [4m$HOME/.Xauthority[24m      default location of the X authority database

[1mSEE ALSO[0m
       [4mxauth(1)[24m               command  line  interface  to  the  X   authority
                              database
       [4mNeWS(3)[24m                provides  a  NeWS  connection  to  the  X11/NeWS
                              server
       [4mRelatedEvents(3)[24m       error handling

[1mLIBRARY[0m
       [4mXAuthority[24m is part of the [4mNeWS[24m-library, i.e. [1m+lNeWS [22mmust  be  specified
       for [4mmmo(1)[24m.



Release 0.5                Last change: 10 July 2003             XAuthority(3)
