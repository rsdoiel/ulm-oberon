IPv6Addresses(3)              Ulm's Oberon System             IPv6Addresses(3)



[1mNAME[0m
       IPv6Addresses - support of IPv6 addresses

[1mSYNOPSIS[0m
       CONST nbytes = 16;
       TYPE Address = ARRAY nbytes OF CHAR;
       TYPE PortNumber = IPv4Addresses.PortNumber;
       TYPE SocketAddress =
             RECORD
                (Objects.ObjectRec)
                host: Address;
                portnum: PortNumber;
             END;

       CONST addrlen = 32; (* size of struct sockaddr_in6 in <sys/socket.h> *)
       TYPE SysAddress = ARRAY addrlen OF BYTE;

       CONST invalidInputChar = 0;
       CONST multipleDoubleColons = 1;
       CONST unexpectedEOF = 2;
       CONST valueOutOfRange = 3;
       CONST tripleColon = 4;
       CONST errors = 5;
       TYPE ErrorCode = SHORTINT; (* invalidInputChar... *)
       TYPE ErrorEvent = POINTER TO ErrorEventRec;
       TYPE ErrorEventRec =
             RECORD
             (Events.EventRec)
             errorcode: ErrorCode;
             pos: Streams.Count;
             END;
       VAR errormsg: ARRAY errors OF Events.Message;
       VAR error: Events.EventType;

       PROCEDURE GetPort(address: SocketAddress) : INTEGER;
       PROCEDURE SetPort(VAR address: SocketAddress; portnum: INTEGER);
       PROCEDURE IsAnyAddr(address: Address) : BOOLEAN;
       PROCEDURE SetAnyAddr(VAR address: Address);

       PROCEDURE ConvertToSys(address: SocketAddress; VAR sysaddr: SysAddress);
       PROCEDURE ConvertFromSys(sysaddr: SysAddress; VAR address: SocketAddress);

       PROCEDURE ReadText(s: Streams.Stream; VAR ipaddr: Address) : BOOLEAN;
       PROCEDURE WriteText(s: Streams.Stream; ipaddr: Address);
       PROCEDURE CreateAddress(VAR ipaddr: Address; text: ARRAY OF CHAR);


[1mDESCRIPTION[0m
       [4mIPv6Addresses[24m provides support for IPv6 addresses. [4mSocketAddress[24m repre-
       sents IPv6 addresses in an easily accessible way.  Note  however,  that
       the  fields  [4mhost[24m  and [4mportnum[24m must be kept or are to be interpreted in
       network order, i.e. in big-endian byte order. The routines [4mGetPort[24m  and
       [4mSetPort[24m  can  be  used  to  convert the port number from and to network
       order. [4mSetAnyAddr[24m zeroes [4maddress[24m and [4mIsAnyAddr[24m tests  if  [4maddress[24m  con-
       sists of zeroes only.

       [4mSysAddress[24m  represents  IPv6 addresses in an internal form which can be
       passed to the operations of [4mSysSockets(3)[24m.  [4mConvertToSys[24m  and  [4mConvert-[0m
       [4mFromSys[24m  allow  IPv6 addresses to be converted to and from the internal
       form.

       IPv6 addresses in a textual representation that conforms to  RFC  1884,
       section  2.2,  paragraphs  1 and 2 (but not 3) can be read by [4mReadText[24m.
       [4mWriteText[24m prints [4mipaddr[24m in the compressed notation to [4ms[24m.  [4mCreateAddress[0m
       allows  to  create  an  IPv6  address  directly  from  a string that is
       accepted by [4mReadText[24m.

[1mDIAGNOSTICS[0m
       [4mReadText[24m generates following error events and relates them  to  [4ms[24m  (see
       [4mRelatedEvents(3)[24m) in case of syntax errors:
       [4minvalidInputChar[24m   The  text  representation  of an IPv6 address is not
                          yet complete but a character was found which is nei-
                          ther a colon nor a hexadecimal digit.
       [4mmultipleDoubleColons[24mMore than one ``::'' construct was found.
       [4munexpectedEOF[24m      End  of the input stream was detected while the tex-
                          tual representation of the IPv6 address was not  yet
                          complete.
       [4mvalueOutOfRange[24m    One  of  the  values  did  not fit into 16 bit, i.e.
                          exceeded 0FFFFH.
       [4mtripleColon[24m        Three or more consecutive colons where found.
       Note that the stream position [4mpos[24m that is given in the error events  is
       to be interpreted relative to the stream position where [4mReadText[24m starts
       reading.

       [4mCreateAddress[24m asserts that [4mtext[24m is accepted by [4mReadText[24m.

[1mSEE ALSO[0m
       [4mIPv4Addresses(3)[24m   support of IPv4 addresses
       [4mSysSockets(3)[24m      system calls for sockets



Release 0.5               Last change: 9 August 2006          IPv6Addresses(3)
