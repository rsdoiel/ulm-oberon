SysTime(3)                    Ulm's Oberon System                   SysTime(3)



[1mNAME[0m
       SysTime - access to the system clock

[1mSYNOPSIS[0m
       TYPE Time = SysTypes.Time;
       TYPE TimesRec =
          RECORD
             utime: Time;          (* CPU time while in user mode *)
             stime: Time;          (* CPU time while in system mode *)
             cutime: Time;         (* user time of all children *)
             cstime: Time;         (* system time of all children *)
          END;
       TYPE TimeVal =
          RECORD
             sec: Time;            (* seconds and ... *)
             usec: Time;           (* ... micro seconds *)
          END;
       TYPE TimeZone =
          RECORD
             minuteswest: INTEGER; (* of Greenwich *)
             dsttime: INTEGER;     (* type of dst correction to apply *)
          END;

       PROCEDURE GetTime() : Time;
       PROCEDURE GetTimeOfDay(VAR time: TimeVal; VAR timezone: TimeZone);
       PROCEDURE GetUnitsPerSecond() : INTEGER;
       PROCEDURE GetProcessTimes(VAR times: TimesRec);
       PROCEDURE RealTime(reset: BOOLEAN) : Time;
       PROCEDURE CPUTime(reset: BOOLEAN) : Time;
       PROCEDURE Alarm(seconds: Time);
       PROCEDURE AlarmTime() : Time;
       PROCEDURE Sleep(seconds: Time);


[1mDESCRIPTION[0m
       [4mGetTime[24m  returns  the  current  GMT time in seconds since Jan, 1, 1970.
       [4mGetTimeOfDay[24m returns the current time and timezone.

       [4mGetUnitsPerSecond[24m returns the number of units per second. Some  of  the
       following  procedures  work  with time measurements in units instead of
       seconds.

       [4mGetProcessTimes[24m returns time-accounting  information  for  the  current
       process  and for the terminated child processes of the current process.
       All times are measured in units.

       [4mRealTime[24m returns the real time in units elapsed since the start of  the
       process  or  since  the  last call with [4mreset[24m [1mTRUE[22m.  [4mCPUTime[24m works like
       [4mRealTime[24m but returns the CPU time.

       [4mAlarm[24m causes [4mSig.ALRM[24m to be raised after the given number of real  time
       seconds.  Only one alarm clock is supported by the system.  Thus multi-
       ple calls of [4mAlarm[24m reset the alarm clock.  An argument of 0 causes  the
       alarm  clock  to be cancelled.  [4mAlarmTime[24m returns the number of seconds
       remaining to the entry of the event.  [4mSleep[24m suspends  the  process  for
       the  given number of real time seconds.  [4mSleep[24m uses [4mAlarm[24m but preserves
       the setting of the alarm clock.  To assure compatibility to other parts
       of  the library, time conditions (see [4mTimeConditions(3)[24m) should be used
       instead of [4mSleep[24m.

[1mDIAGNOSTICS[0m
       None of these system calls is expected to fail.

[1mSEE ALSO[0m
       [4mtime(1)[24m    shell command interface to [4mtimes(2)[0m
       [4malarm(2)[24m   [4mAlarm[24m, [4mAlarmTime[24m, and [4mSleep[0m
       [4mpause(2)[24m   used for suspension by [4mSleep[0m
       [4mtime(2)[24m    [4mGetTime[0m
       [4mtimes(2)[24m   [4mGetProcessTimes[24m, [4mRealTime[24m and [4mCPUTime[0m



Release 0.5              Last change: 21 October 2008               SysTime(3)
