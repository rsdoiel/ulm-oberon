


ConstantObjects(3)     Ulm's Oberon System     ConstantObjects(3)


NNAAMMEE
       ConstantObjects  -  simplified  support of persistence for
       constant context-independent objects

SSYYNNOOPPSSIISS
       PROCEDURE RegisterType(VAR type: Services.Type;
                              name, baseName: ARRAY OF CHAR);
       PROCEDURE Init(object: PersistentObjects.Object;
                      type: Services.Type;
                      name: ARRAY OF CHAR);


DDEESSCCRRIIPPTTIIOONN
       _C_o_n_s_t_a_n_t_O_b_j_e_c_t_s provides a simplified support  of  persis­
       tence for objects that

       ·      are  created  during  the  initialization time of a
              module,

       ·      remain constant,

       ·      may be considered identical  independent  from  the
              process context, and

       ·      have  their  own  type  extension  of _P_e_r_s_i_s_t_e_n_t_O_b_­
              _j_e_c_t_s_(_3_).

       The idea is that instead of transferring  the  whole  con­
       tents  of  a  constant  object by marshalling procedures a
       name is sufficient to identify the same object in  another
       process.   In addition, constant objects do not get cloned
       and  keep  therefore  referential  integrity  as   objects
       imported or exported by _R_e_m_o_t_e_O_b_j_e_c_t_s_(_3_).

       _R_e_g_i_s_t_e_r_T_y_p_e  is  to  be  called  instead of _P_e_r_s_i_s_t_e_n_t_O_b_­
       _j_e_c_t_s_._R_e_g_i_s_t_e_r_T_y_p_e for types  of  constant  objects.  Note
       that  _t_y_p_e  must be exclusively used as a type of constant
       objects in the sense of this module.

       _I_n_i_t is to be called instead of _P_e_r_s_i_s_t_e_n_t_O_b_j_e_c_t_s_._I_n_i_t for
       constant  objects. Note that _n_a_m_e should be qualified with
       the own module name to avoid name conflicts.

DDIIAAGGNNOOSSTTIICCSS
       While various error events may  be  raised  by  _L_o_a_d_e_r_(_3_),
       _N_e_t_I_O_(_3_), _P_e_r_s_i_s_t_e_n_t_O_b_j_e_c_t_s_(_3_), _S_t_r_e_a_m_s_(_3_), and the under­
       lying stream implementation, _C_o_n_s_t_a_n_t_O_b_j_e_c_t_s does not gen­
       erate any events itself.

       Assertions fail if

       ·      _P_e_r_s_i_s_t_e_n_t_O_b_j_e_c_t_s_._R_e_a_d_I_n_t_o  is  called for constant
              objects, or if




Release 0.5          Last change: 31 May 2000                   1





ConstantObjects(3)     Ulm's Oberon System     ConstantObjects(3)


       ·      _P_e_r_s_i_s_t_e_n_t_O_b_j_e_c_t_s_._I_n_i_t was called instead of  _I_n_i_t.
              This  is  detected  by the interface procedures for
              _P_e_r_s_i_s_t_e_n_t_O_b_j_e_c_t_s_(_3_).

SSEEEE AALLSSOO
       _L_o_a_d_e_r_(_3_)              dynamic loading of modules
       _P_e_r_s_i_s_t_e_n_t_O_b_j_e_c_t_s_(_3_)   operations for persistent objects


















































Release 0.5          Last change: 31 May 2000                   2


