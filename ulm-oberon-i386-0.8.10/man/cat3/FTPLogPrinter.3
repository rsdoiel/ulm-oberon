


FTPLogPrinter(3)       Ulm's Oberon System       FTPLogPrinter(3)


NNAAMMEE
       FTPLogPrinter - print FTP log events to an output stream

SSYYNNOOPPSSIISS
       PROCEDURE Install(session: FTPSessions.Session; log: Streams.Stream);


DDEESSCCRRIIPPTTIIOONN
       _F_T_P_L_o_g_P_r_i_n_t_e_r provides separate tasks that convert FTP log
       events into printed  messages  onto  a  designated  output
       stream.

       _I_n_s_t_a_l_l  spawns  a task (using _J_o_b_s_(_3_)) that processes log
       events generated by _F_T_P_L_o_g_g_e_r_s_(_3_) for _s_e_s_s_i_o_n  until  _s_e_s_­
       _s_i_o_n terminates (see _R_e_s_o_u_r_c_e_s_(_3_)) or output operations to
       _l_o_g fail.  The output generated for a log  event  consists
       of

       ·      a  line  beginning with ``<<< '' presenting the FTP
              request (see _F_T_P_R_e_q_u_e_s_t_s_(_3_)),

       ·      a line beginning with  ``>>>  ''  showing  the  FTP
              response (see _F_T_P_R_e_s_p_o_n_s_e_s_(_3_)), and,

       ·      if  any error events occured in the context of this
              FTP request, the output generated by _C_o_n_c_l_u_s_i_o_n_s_(_3_)
              in the succeeding lines.

       _S_t_r_e_a_m_s_._F_l_u_s_h  is  invoked for _l_o_g after printing each log
       event.  Hence, _S_t_r_e_a_m_s_._o_n_e_b_u_f should be taken as buffering
       mode for _l_o_g.

       Multiple logging tasks with different output streams for a
       particular _s_e_s_s_i_o_n are permitted.

SSEECCUURRIITTYY CCOONNSSIIDDEERRAATTIIOONNSS
       Due to the pipelining architecture it is possible that not
       all  FTP  log events are printed if the FTP server process
       terminates abnormally.

       When logging fails (due to the termination  of  an  output
       filter,  for  example),  FTP server operations for _s_e_s_s_i_o_n
       continue to be handled unless provisions  are  taken  that
       _s_e_s_s_i_o_n terminates as well in such cases.

       All  requests,  responses, and error reports depend on the
       input provided by the communication partner.  Hence,  they
       may  contain overly long strings (e.g., for buffer overrun
       attacks) or malicious sequences (e.g., for format attacks)
       that  could  exploit  external  utilities that postprocess
       logs.  _F_T_P_L_o_g_P_r_i_n_t_e_r itself provides all data as-is  with­
       out any filtering against possible attacks.

       The  utility  _s_p_l_o_g_g_e_r_(_8_)  that is shipped with Qmail (see



Release 0.5          Last change: 8 May 2001                    1





FTPLogPrinter(3)       Ulm's Oberon System       FTPLogPrinter(3)


       hhttttpp::////ccrr..yypp..ttoo//qqmmaaiill..hhttmmll) may  be  used  in  conjunction
       with _U_n_i_x_P_i_p_e_s_(_3_) to forward log messages in a safe way to
       _s_y_s_l_o_g_d_(_1_m_).

       Another   secure   output   filter   is   _m_u_l_t_i_l_o_g,    see
       hhttttpp::////ccrr..yypp..ttoo//ddaaeemmoonnttoooollss//mmuullttiilloogg..hhttmmll.

SSEEEE AALLSSOO
       _F_T_P_L_o_g_g_e_r_s_(_3_)   FTP log events

BBUUGGSS
       Please  note  that  responses in their logged form are not
       necessarily complete as marks (intermediate responses, see
       _F_T_P_S_e_s_s_i_o_n_s_(_3_)) are not propagated to _F_T_P_L_o_g_g_e_r_s_(_3_).











































Release 0.5          Last change: 8 May 2001                    2


