


InetHTTPURLs(3)        Ulm's Oberon System        InetHTTPURLs(3)


NNAAMMEE
       InetHTTPURLs - implementation of HTTP URLs

SSYYNNOOPPSSIISS
       TYPE URL = POINTER TO URLRec;
       TYPE URLRec =
          RECORD
             (InetURLs.URLRec)
             host: Streams.Stream;
             port: Streams.Stream;
             path: Streams.Stream;
             absolutePath: BOOLEAN;
             search: Streams.Stream;
             fragment: Streams.Stream;
          END;

       CONST illegalScheme = 0;
       CONST expectingSlash = 1;
       CONST illegalName = 2;
       CONST illegalPort = 3;
       CONST illegalPath = 4;
       CONST illegalSearch = 5;
       CONST illegalFragment = 6;
       CONST errorcodes = 7;
       TYPE ErrorCode = SHORTINT;
       TYPE ErrorEvent = POINTER TO ErrorEventRec;
       TYPE ErrorEventRec =
          RECORD
             (Events.EventRec)
             errorcode: ErrorCode;
          END;
       VAR errorMessages: ARRAY errorcodes OF Events.Message;
       VAR error: Events.EventType;

       PROCEDURE Create(VAR url: InetURLs.URL);


DDEESSCCRRIIPPTTIIOONN
       The module _I_n_e_t_H_T_T_P_U_R_L_s implements the procedures for pro≠
       cessing a HTTP URL. It first expands the URL-object to the
       additional  parts of a HTTP URL.  _h_o_s_t is the host name of
       the server or NNIILL if not supplied.  _p_o_r_t is the  specified
       port of the URL or NNIILL if not supplied.  _p_a_t_h contains the
       path of the URL or NNIILL if not supplied.  If  the  path  is
       absolute  (leading slash `/') _a_b_s_o_l_u_t_e_P_a_t_h is TTRRUUEE. If the
       URL contains a parameter (split by  a  question  mark  `?'
       from  the  prefix  of the URL) it will be stored in _s_e_a_r_c_h
       otherwise _s_e_a_r_c_h will be NNIILL.  _f_r_a_g_m_e_n_t contains  a  frag≠
       ment  part of the URL (split by a number sign `#' from the
       prefix of the URL) or NNIILL if not supplied.

       _I_n_e_t_H_T_T_P_U_R_L_s supports  relative  and  absolute  URLs.  All
       parts are substreams of the assigned stream.




Release 0.5         Last change: 24 April 1998                  1





InetHTTPURLs(3)        Ulm's Oberon System        InetHTTPURLs(3)


       _C_r_e_a_t_e  creates  a new HTTP URL. The components remain NNIILL
       until a stream is assigned by _I_n_e_t_U_R_L_s_._A_s_s_i_g_n.

       _I_n_e_t_U_R_L_s implements  the  procedures  _I_n_e_t_U_R_L_s_._A_s_s_i_g_n  and
       _I_n_e_t_U_R_L_s_._T_o_S_t_r_i_n_g.

DDIIAAGGNNOOSSTTIICCSS
       The  following  error  events may be generated assigning a
       stream to an URL
       _i_l_l_e_g_a_l_S_c_h_e_m_e     Illegal Character in  scheme  of  URL  -
                         Syntax error
       _e_x_p_e_c_t_i_n_g_S_l_a_s_h    Expecting '/' after scheme in URL - Syn≠
                         tax error
       _i_l_l_e_g_a_l_N_a_m_e       Illegal Character in domain name of  URL
                         - Syntax error
       _i_l_l_e_g_a_l_P_o_r_t       Illegal  Character in port number of URL
                         - Syntax error
       _i_l_l_e_g_a_l_P_a_t_h       Illegal Character in path of URL -  Syn≠
                         tax error
       _i_l_l_e_g_a_l_S_e_a_r_c_h     Illegal  Character  in parameter part of
                         URL - Syntax error
       _i_l_l_e_g_a_l_F_r_a_g_m_e_n_t   Illegal Character  in  fragment-part  of
                         URL - Syntax error

SSEEEE AALLSSOO
       _I_n_e_t_U_R_L_s_(_3_)   addresses for web pages
       _S_t_r_e_a_m_s_(_3_)    stream operations

AAUUTTHHOORR
       Manfred Rueﬂ, University of Ulm



























Release 0.5         Last change: 24 April 1998                  2


