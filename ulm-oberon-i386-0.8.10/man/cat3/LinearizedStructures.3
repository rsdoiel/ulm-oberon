LinearizedStructures(3)       Ulm's Oberon System      LinearizedStructures(3)



[1mNAME[0m
       LinearizedStructures - save and load cyclic data structures

[1mSYNOPSIS[0m
       TYPE Object = PersistentObjects.Object;

       CONST missingReset = 0;      (* Reset must be called before switching mode *)
       CONST cannotReadHeader = 1;  (* failed to read object header *)
       CONST invalidHeader = 2;     (* corrupted/invalid object header *)
       CONST cannotReadObject = 3;  (* failed to read object *)
       CONST unknownKey = 4;        (* unknown key encountered *)
       CONST cannotWriteHeader = 5; (* failed to write object header *)
       CONST cannotWriteObject = 6; (* failed to write object *)
       CONST typeGuardFailure = 7;
       CONST errors = 8;
       TYPE ErrorCode = SHORTINT; (* missingReset.. *)
       TYPE ErrorEvent = POINTER TO ErrorEventRec;
       TYPE ErrorEventRec =
          RECORD
             (Events.EventRec)
             errorcode: ErrorCode;
          END;
       VAR error: Events.EventType;
       VAR errormsg: ARRAY errors OF Events.Message;

       PROCEDURE Reset(s: Streams.Stream);
       PROCEDURE Read(s: Streams.Stream; VAR object: Object) : BOOLEAN;
       PROCEDURE GuardedRead(s: Streams.Stream; guard: Services.Type;
                             VAR object: Object) : BOOLEAN;
       PROCEDURE Write(s: Streams.Stream; object: Object) : BOOLEAN;


[1mDESCRIPTION[0m
       [4mLinearizedStructures[24m  supports the export and import of persistent data
       structures which may contain reference cycles.  Just replace [4mPersisten-[0m
       [4mtObjects.Read[24m  by  [4mLinearizedStructures.Read[24m, [4mPersistentObjects.Guarde-[0m
       [4mdRead[24m by [4mLinearizedStructures.GuardedRead[24m, and  [4mPersistentObjects.Write[0m
       by  [4mLinearizedStructures.Write[24m.  Additionally, [1mNIL [22mcan be given to [4mLin-[0m
       [4mearizedStructures.Write[24m and [4mLinearizedStructures.Read[24m may return [1mNIL[22m.

       [4mLinearizedStructures[24m works by attaching disciplines to the given stream
       and  the  objects being read.  [4mReset[24m allows to remove these disciplines
       and is required on switching from reading to writing and vice versa.

       Please note that the objects must be read in the  same  order  as  they
       have  been  written before.  It's wise to call [4mReset[24m before and after a
       sequence of read and write operations and to avoid seek operations dur-
       ing saving/loading and stream positioning inside a group of objects.

[1mDIAGNOSTICS[0m
       Errors  and  failures  detected  by [4mLinearizedStructures[24m lead to events
       which are related to the stream.   Following  error  codes  are  imple-
       mented:
       [4mmissingReset[24m        [4mReset[24m  wasn't  called before switching from reading
                           to writing mode.
       [4mcannotReadHeader[24m    [4mRead[24m wasn't able to read an object header.
       [4minvalidHeader[24m       An invalid or corrupted header was read by [4mRead[24m.
       [4mcannotReadObject[24m    [4mPersistentObjects.Read[24m failed for some reason.
       [4munknownKey[24m          An object header references a yet  unknown  object.
                           This  may  happen  if  reading  didn't start at the
                           beginning of the list or some objects were skipped.
       [4mcannotWriteHeader[24m   [4mWrite[24m was unable to write an object header.
       [4mcannotWriteObject[24m   [4mPersistentObjects.Write[24m failed for some reason.
       [4mtypeGuardFailure[24m    The  guard of [4mGuardedRead[24m did not match the type of
                           the object read.

[1mSEE ALSO[0m
       [4mModularizedStructures(3)[24m   distributed  graphs  of  persistent  objects
                                  across multiple byte sequences
       [4mPersistentObjects(3)[24m       input and output of persistent objects
       [4mRelatedEvents(3)[24m           error handling



Release 0.5                Last change: 3 June 2004    LinearizedStructures(3)
