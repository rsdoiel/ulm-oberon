


FTPRequests(3)         Ulm's Oberon System         FTPRequests(3)


NNAAMMEE
       FTPRequests - scan FTP requests from input

SSYYNNOOPPSSIISS
       TYPE Request = POINTER TO RequestRec;
       TYPE RequestRec =
             RECORD
                (PersistentDisciplines.ObjectRec)
                command: ConstStrings.String; (* in upper-case *)
                param: Streams.Stream; (* rest of the line, may be NIL *)
             END;

       TYPE Event = POINTER TO EventRec;
       TYPE EventRec =
             RECORD
                (Events.EventRec)
                request: Request;
             END;

       PROCEDURE GetRequest(s: Streams.Stream; VAR request: Request) : BOOLEAN;


DDEESSCCRRIIPPTTIIOONN
       _F_T_P_R_e_q_u_e_s_t_s  provides  in  _R_e_q_u_e_s_t  a  persistent type for
       incoming FTP requests, a scanner for FTP requests on bidi­
       rectional  communication  channels, and an event type that
       may be used for logging (see _F_T_P_L_o_g_g_e_r_s_(_3_)).

       _G_e_t_R_e_q_u_e_s_t reads from _s a request, consisting of

       ·      a command name that  contains  neither  spaces  nor
              line  terminators  (lower-case  characters are con­
              verted to upper-case),

       ·      an optional parameter, separated by oonnee space char­
              acter from the command name, and

       ·      a line terminator consisting of _A_S_C_I_I_._c_r, _A_S_C_I_I_._l_f.
              As _A_S_C_I_I_._l_f cannot be embedded in  a  parameter,  a
              single   _A_S_C_I_I_._l_f  without  preceding  _A_S_C_I_I_._c_r  is
              accepted as well.

       _G_e_t_R_e_q_u_e_s_t processes telnet codes in  conformance  to  RFC
       959  and  sends  responses to these embedded requests to _s
       under the assumption that _s  is  a  bidirectional  network
       connection.

SSEECCUURRIITTYY CCOONNSSIIDDEERRAATTIIOONNSS
       _G_e_t_R_e_q_u_e_s_t accepts requests of arbitrary length and stores
       them into persistent  objects.  This  opens  FTP  services
       using  _G_e_t_R_e_q_u_e_s_t to denial-of-service attacks by flooding
       them with  unterminated  requests  which  cause  arbitrary
       amounts  of  memory  to  be  consumed  until all available
       resources are exhausted.  A counter measure could  be  the



Release 0.5         Last change: 23 April 2001                  1





FTPRequests(3)         Ulm's Oberon System         FTPRequests(3)


       application   of  general  resource  limits  using  _S_y_s_R_e_­
       _s_o_u_r_c_e_s_(_3_) and/or of time limits  using  _F_T_P_T_i_m_e_r_s_(_3_)  and
       _F_T_P_T_i_m_e_r_E_v_e_n_t_s_(_3_).

DDIIAAGGNNOOSSTTIICCSS
       _G_e_t_R_e_q_u_e_s_t  returns  TTRRUUEE  on success and FFAALLSSEE in case of
       failures but does not generate any  error  events  on  its
       own.  Please check _s_._e_o_f as an unexpected end on the input
       side can be the cause of a failure.

SSEEEE AALLSSOO
       _F_T_P_C_o_m_m_a_n_d_s_(_3_)         collection of FTP command  strings.
       _F_T_P_R_e_s_p_o_n_s_e_s_(_3_)        sibling  of this module that offers
                              a persistent type for FTP responses
                              and  an  operation  that  allows to
                              send them over network connections.









































Release 0.5         Last change: 23 April 2001                  2


