


SortedBags(3)          Ulm's Oberon System          SortedBags(3)


NNAAMMEE
       SortedBags - sorted collections

SSYYNNOOPPSSIISS
       CONST ascending = 0;  (* in ascending order *)
       CONST descending = 1; (* in descending order *)
       TYPE Order = Iterators.Mode; (* ascending, descending *)
       TYPE Bag = POINTER TO BagRec;
       TYPE BagRec = RECORD (Services.ObjectRec) END;

       PROCEDURE Create(VAR bag: Bag; key: Keys.Key);
       PROCEDURE GetKey(bag: Bag; VAR key: Keys.Key);
       PROCEDURE Add(bag: Bag; object: Services.Object);
       PROCEDURE Remove(bag: Bag; object: Services.Object);
       PROCEDURE Card(bag: Bag): INTEGER;
       PROCEDURE GetEntries(bag: Bag; order: Order;
                            from, to: Keys.Value; VAR it: Iterators.Iterator);


DDEESSCCRRIIPPTTIIOONN
       _S_o_r_t_e_d_B_a_g_s implements (on base of _A_V_L_T_r_e_e_s_(_3_)) sorted col­
       lections that do not require key values to be unique.

       _C_r_e_a_t_e creates a sorted  bag  with  _k_e_y  as  sorting  key.
       _G_e_t_K_e_y returns the key previously passed to _C_r_e_a_t_e.

       _A_d_d  adds  _o_b_j_e_c_t  to  _b_a_g.  Note that it is a fatal error
       (assertion failed) if _o_b_j_e_c_t does not support the  sorting
       key  of _b_a_g.  _R_e_m_o_v_e removes _o_b_j_e_c_t from _b_a_g if it belongs
       to it.  _C_a_r_d returns the number of objects stored in  _b_a_g.
       _G_e_t_E_n_t_r_i_e_s  creates  an  iterator that returns all objects
       ranging from _f_r_o_m to  _t_o  in  sorted  order  ascending  or
       descending  according  to _o_r_d_e_r.  In case of identical key
       values the order is defined by the time of addition.  Note
       that _f_r_o_m and _t_o may be NNIILL to specify the lowest or high­
       est key of _b_a_g, respectively.

DDIIAAGGNNOOSSTTIICCSS
       _S_o_r_t_e_d_B_a_g_s does not generate any diagnostics  but  asserts
       that  objects  passed  to _A_d_d or _R_e_m_o_v_e support the key of
       _b_a_g.

SSEEEE AALLSSOO
       _A_V_L_T_r_e_e_s_(_3_)    works like this  module  but  requires  key
                      values to be unique
       _I_t_e_r_a_t_o_r_s_(_3_)   iteration of object lists
       _K_e_y_s_(_3_)        total order relations










Release 0.5         Last change: 1 April 2000                   1


