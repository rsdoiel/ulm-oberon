


HTTPResponse(3)        Ulm's Oberon System        HTTPResponse(3)


NNAAMMEE
       HTTPResponse - write HTTP-structures to a stream

SSYYNNOOPPSSIISS
       PROCEDURE StatusLine(s: Streams.Stream; code: INTEGER;
                            versionMajor, versionMinor: SHORTINT);
       PROCEDURE Allow(s: Streams.Stream; methods: ARRAY OF CHAR);
       PROCEDURE CacheControl(s: Streams.Stream; mechanism: SET);
       PROCEDURE Connection(s: Streams.Stream; tokens: ARRAY OF CHAR);
       PROCEDURE ContentBase(s: Streams.Stream; baseURL: ARRAY OF CHAR);
       PROCEDURE ContentEncoding(s: Streams.Stream; encoding: ARRAY OF CHAR);
       PROCEDURE ContentLanguage(s: Streams.Stream; languages: ARRAY OF CHAR);
       PROCEDURE ContentLength(s: Streams.Stream; length: LONGINT);
       PROCEDURE ContentLocation(s: Streams.Stream; location: ARRAY OF CHAR);
       PROCEDURE ContentType(s: Streams.Stream; type, subType, params: ARRAY OF CHAR);
       PROCEDURE Date(s: Streams.Stream; date: Times.Time);
       PROCEDURE ActualDate(s: Streams.Stream);
       PROCEDURE EntityTag(s: Streams.Stream; eTag: ARRAY OF CHAR; weak: BOOLEAN);
       PROCEDURE Expires(s: Streams.Stream; date: Times.Time);
       PROCEDURE LastModified(s: Streams.Stream; date: Times.Time);
       PROCEDURE Location(s: Streams.Stream; url: ARRAY OF CHAR);
       PROCEDURE Pragma(s: Streams.Stream; directives: ARRAY OF CHAR);
       PROCEDURE Public(s: Streams.Stream; methods: ARRAY OF CHAR);
       PROCEDURE RetryAfter(s: Streams.Stream; isDelta: BOOLEAN; delta: LONGINT;
                            date: Times.Time);
       PROCEDURE Server(s: Streams.Stream; info: ARRAY OF CHAR);
       PROCEDURE TransferEncoding(s: Streams.Stream; encoding: ARRAY OF CHAR);
       PROCEDURE Upgrade(s: Streams.Stream; products: ARRAY OF CHAR);
       PROCEDURE Vary(s: Streams.Stream; fieldNames: ARRAY OF CHAR);
       PROCEDURE WWWAuthenticate(s: Streams.Stream;
                                 scheme, realm, param: ARRAY OF CHAR);
       PROCEDURE Error(s: Streams.Stream; code: INTEGER; reason: ARRAY OF CHAR);


DDEESSCCRRIIPPTTIIOONN
       Writes  HTTP-status-lines,  HTTP-header  fields  or  error
       texts to a stream. The necessary <cr>- and <lf>-characters
       are added.

       _S_t_a_t_u_s_L_i_n_e writes a status line to stream _s. The necessary
       reason phrase is selected by the _c_o_d_e. Status-line-version
       is HTTP/1.1.

       _A_l_l_o_w,  _C_a_c_h_e_C_o_n_t_r_o_l,  _C_o_n_n_e_c_t_i_o_n, _C_o_n_t_e_n_t_B_a_s_e, _C_o_n_t_e_n_t_E_n_≠
       _c_o_d_i_n_g, _C_o_n_t_e_n_t_L_a_n_g_u_a_g_e,  _C_o_n_t_e_n_t_L_e_n_g_t_h,  _C_o_n_t_e_n_t_L_o_c_a_t_i_o_n,
       _C_o_n_t_e_n_t_T_y_p_e, _D_a_t_e, _E_n_t_i_t_y_T_a_g, _E_x_p_i_r_e_s, _L_a_s_t_M_o_d_i_f_i_e_d, _L_o_c_a_≠
       _t_i_o_n, _P_r_a_g_m_a, _P_u_b_l_i_c, _R_e_t_r_y_A_f_t_e_r,  _S_e_r_v_e_r,  _T_r_a_n_s_f_e_r_E_n_c_o_d_≠
       _i_n_g, _U_p_g_r_a_d_e, _V_a_r_y and _W_W_W_A_u_t_h_e_n_t_i_c_a_t_e write the name-cor≠
       responding header fields to stream  _s.  _A_c_t_u_a_l_D_a_t_e  writes
       the actual date in a date header field to stream _s.

       _E_r_r_o_r  writes  an  error-body  to _s. The text of this body
       will be determined by the given _c_o_d_e-value  and  a  _r_e_a_s_o_n
       which  specifies the problem. The mediatype of the message



Release 0.5         Last change: 24 April 1998                  1





HTTPResponse(3)        Ulm's Oberon System        HTTPResponse(3)


       is text/html.

SSEEEE AALLSSOO
       _S_t_r_e_a_m_s_(_3_)   stream operations
       _T_i_m_e_s_(_3_)     time stamps

AAUUTTHHOORR
       Manfred Rueﬂ, University of Ulm

















































Release 0.5         Last change: 24 April 1998                  2


