


BlockCiphers(3)        Ulm's Oberon System        BlockCiphers(3)


NNAAMMEE
       BlockCiphers - general abstraction for block ciphers

SSYYNNOOPPSSIISS
       TYPE Cipher = POINTER TO CipherRec;
       TYPE CipherRec = RECORD (Ciphers.CipherRec) END;
       PROCEDURE Init (key: Cipher; if: Ciphers.Interface;
                      inLength, outLength: INTEGER);
       PROCEDURE GetInLength (key: Cipher) : INTEGER;
       PROCEDURE GetOutLength (key: Cipher) : INTEGER;
       PROCEDURE EncryptBlock (in: Streams.Stream; key: Cipher;
                              out: Streams.Stream) : BOOLEAN;
       PROCEDURE DecryptBlock (in: Streams.Stream; key: Cipher;
                              out: Streams.Stream) : BOOLEAN;


DDEESSCCRRIIPPTTIIOONN
       _B_l_o_c_k_C_i_p_h_e_r_s  provides an abstraction for the use of block
       ciphers. Block ciphers do not operate on whole streams but
       rather on blocks of a defined length.

       _I_n_i_t  connects  the block cipher _k_e_y with the interface _i_f
       (see _C_i_p_h_e_r_s_(_3_)). Besides it sets the corresponding  input
       and output block lengths for _k_e_y which must be positive.

       _G_e_t_I_n_L_e_n_g_t_h  returns  the length of an input block for the
       cipher _k_e_y. _G_e_t_O_u_t_L_e_n_g_t_h does  the  same  for  the  output
       block.

       _E_n_c_r_y_p_t_B_l_o_c_k  and  _D_e_c_r_y_p_t_B_l_o_c_k  work  much  the same like
       _C_i_p_h_e_r_s_._E_n_c_r_y_p_t and _C_i_p_h_e_r_s_._D_e_c_r_y_p_t but instead of dealing
       with whole streams these procedures operate only on a sin­
       gle block.

SSEEEE AALLSSOO
       _A_s_y_m_m_e_t_r_i_c_C_i_p_h_e_r_s_(_3_)   abstraction for the use  of  public
                              key ciphers
       _C_B_C_M_o_d_e_(_3_)             a  special  mode  of  operation for
                              block ciphers
       _C_i_p_h_e_r_s_(_3_)             abstraction for general ciphers and
                              crypto systems
       _S_t_r_e_a_m_C_i_p_h_e_r_s_(_3_)       abstraction  for  the use of stream
                              ciphers

AAUUTTHHOORR
       Michael Szczuka, University of Ulm











Release 0.5       Last change: 17 September 1996                1


