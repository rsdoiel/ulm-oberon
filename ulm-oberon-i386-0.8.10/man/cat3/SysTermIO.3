


SysTermIO(3)           Ulm's Oberon System           SysTermIO(3)


NNAAMMEE
       SysTermIO - UNIX System V interface to the terminal driver

SSYYNNOOPPSSIISS
       (* input modes *)
       CONST ignbrk = { 31 };
       CONST brkint = { 30 };
       CONST ignpar = { 29 };
       CONST parmrk = { 28 };
       CONST inpck = { 27 };
       CONST istrip = { 26 };
       CONST inlcr = { 25 };
       CONST igncr = { 24 };
       CONST icrnl = { 23 };
       CONST iuclc = { 22 };
       CONST ixon = { 21 };
       CONST ixany = { 20 };
       CONST ixoff = { 19 };
       (* output modes *)
       CONST opost = { 31 };
       CONST olcuc = { 30 };
       CONST onlcr = { 29 };
       CONST ocrnl = { 28 };
       CONST onocr = { 27 };
       CONST onlret = { 26 };
       CONST ofill = { 25 };
       CONST ofdel = { 24 };
       (* delays for newline *)
       CONST nldly = { 23 };           (* mask *)
       CONST nl0 = { };
       CONST nl1 = { 23 };
       (* delays for carriage return *)
       CONST crdly = { 21, 22 };       (* mask *)
       CONST cr0 = { };
       CONST cr1 = { 22 };
       CONST cr2 = { 21 };
       CONST cr3 = { 21, 22 };
       (* delays for tabs *)
       CONST tabdly = { 19, 20 };      (* mask *)
       CONST tab1 = { 20 };
       CONST tab2 = { 19 };
       CONST tab3 = { 19, 20 };        (* expand tabs to spaces *)
       (* delays for backspaces *)
       CONST bsdly = { 18 };           (* mask *)
       CONST bs0 = { };
       CONST bs1 = { 18 };
       (* delays for vertical tabs *)
       CONST vtdly = { 17 };           (* mask *)
       CONST vt0 = { };
       CONST vt1 = { 17 };
       (* delays for form feeds *)
       CONST ffdly = { 16 };
       CONST ff0 = { };
       CONST ff1 = { 16 };



Release 0.5         Last change: 17 March 1992                  1





SysTermIO(3)           Ulm's Oberon System           SysTermIO(3)


       (* control modes *)
       CONST cbaud = { 28..31 };       (* mask *)
       CONST b0 = {};
       CONST b50 = { 31 };
       CONST b75 = { 30 };
       CONST b110 = { 29, 30 };
       CONST b134 = { 29 };
       CONST b150 = { 29, 31 };
       CONST b200 = { 29, 30 };
       CONST b300 = { 29..31 };
       CONST b600 = { 28 };
       CONST b1200 = { 28, 31 };
       CONST b1800 = { 28, 30 };
       CONST b2400 = { 28, 30, 31 };
       CONST b4800 = { 28, 29 };
       CONST b9600 = { 28, 29, 31 };
       CONST exta = { 28..30 };
       CONST extb = { 28..31 };
       CONST csize = { 26, 27 };       (* mask *)
       CONST cs5 = {};
       CONST cs6 = { 27 };
       CONST cs7 = { 26 };
       CONST cs8 = { 26, 27 };
       CONST cstopb = { 25 };
       CONST cread = { 24 };
       CONST parenb = { 23 };
       CONST parodd = { 22 };
       CONST hupcl = { 21 };
       CONST clocal = { 20 };
       (* line modes *)
       CONST isig = { 31 };
       CONST icanon = { 30 };
       CONST xcase = { 29 };
       CONST echo = { 28 };
       CONST echoe = { 27 };
       CONST echok = { 26 };
       CONST echonl = { 25 };
       CONST noflsh = { 24 };
       (* control characters *)
       CONST vintr = 0;
       CONST vquit = 1;
       CONST verase = 2;
       CONST vkill = 3;
       CONST veof = 4;
       CONST veol = 5;
       CONST veol2 = 6;
       CONST vswtch = 7;
       CONST vmin = veof; vtime = veol;
       CONST controlchars = 8;

       TYPE ControlChars = INTEGER; (* vintr..vswtch *)
       TYPE InputModes = SET;
       TYPE OutputModes = SET;
       TYPE ControlModes = SET;



Release 0.5         Last change: 17 March 1992                  2





SysTermIO(3)           Ulm's Oberon System           SysTermIO(3)


       TYPE LineModes = SET;
       TYPE TermIO =
          RECORD
             inputmodes: InputModes;
             outputmodes: OutputModes;
             controlmodes: ControlModes;
             linemodes: LineModes;
             linedisc: CHAR;
             cc: ARRAY controlchars OF CHAR;
          END;

       PROCEDURE SetTermIO(fd: SysIO.File; termio: TermIO;
                           errors: RelatedEvents.Object) : BOOLEAN;
       PROCEDURE GetTermIO(fd: SysIO.File; VAR termio: TermIO;
                           errors: RelatedEvents.Object) : BOOLEAN;
       PROCEDURE Terminal(fd: SysIO.File) : BOOLEAN;
       PROCEDURE Baudrate(termio: TermIO) : INTEGER;


DDEESSCCRRIIPPTTIIOONN
       _S_e_t_T_e_r_m_I_O and _G_e_t_T_e_r_m_I_O  realize  the  TTCCSSEETTAA  and  TTCCGGEETTAA
       _i_o_c_t_l-calls  with  type  conversion  for Oberon.  _B_a_u_d_r_a_t_e
       converts the baudrate information in _t_e_r_m_i_o into an  inte­
       ger.   _T_e_r_m_i_n_a_l returns TTRRUUEE if _f_d is associated to a ter­
       minal device.

DDIIAAGGNNOOSSTTIICCSS
       _S_e_t_T_e_r_m_I_O and _G_e_t_T_e_r_m_I_O return FFAALLSSEE in error  case  (e.g.
       _f_d  is  not  associated to a terminal device or on invalid
       parameters).  Errors cause the events of  _S_y_s_E_r_r_o_r_s_(_3_)  to
       be  raised.   The  _e_r_r_o_r_s  parameter  is  passed to _S_y_s_E_r_­
       _r_o_r_s_._R_a_i_s_e.

SSEEEE AALLSSOO
       _i_o_c_t_l_(_2_)       _i_o_c_t_l system call
       _t_e_r_m_i_o_(_7_)      _t_e_r_m_i_o interface
       _S_y_s_E_r_r_o_r_s_(_3_)   error handling of failed system calls

BBUUGGSS
       A portable interface for  terminal  settings  is  not  yet
       implemented.
















Release 0.5         Last change: 17 March 1992                  3


