


UnixArgLists(3)        Ulm's Oberon System        UnixArgLists(3)


NNAAMMEE
       UnixArgLists - construction of argument lists

SSYYNNOOPPSSIISS
       TYPE Arguments = SysArgs.Arguments;
       TYPE Stream = POINTER TO StreamRec;
       TYPE StreamRec = RECORD (Streams.StreamRec) END;

       PROCEDURE Open(VAR list: Streams.Stream);
       PROCEDURE Next(list: Streams.Stream);
       PROCEDURE Close(VAR list: Streams.Stream; VAR arglist: Arguments);


DDEESSCCRRIIPPTTIIOONN
       _U_n_i_x_A_r_g_L_i_s_t_s  is  a convenient module to generate argument
       lists of type  _S_y_s_A_r_g_s_._A_r_g_u_m_e_n_t_s  suitable  for  calls  of
       _S_y_s_P_r_o_c_e_s_s_._E_x_e_c  and _S_y_s_P_r_o_c_e_s_s_._E_x_e_c_E_n_v.  An argument list
       is a pointer to a  vector  of  pointers  to  0X-terminated
       character arrays.

       _O_p_e_n  opens _l_i_s_t for the first argument (write-only).  The
       returned stream  is  of  type  _U_n_i_x_A_r_g_L_i_s_t_s_._S_t_r_e_a_m.   _N_e_x_t
       extends the argument list and opens for the next argument.
       _C_l_o_s_e is to be called instead of _S_t_r_e_a_m_s_._C_l_o_s_e to get  the
       argument list.

       Argument lists of _S_y_s_A_r_g_s are untraced and therefore allo­
       cated by  _U_n_t_a_g_g_e_d_S_t_o_r_a_g_e_._N_e_w.   Thus,  they  have  to  be
       explicitly deallocated by _U_n_t_a_g_g_e_d_S_t_o_r_a_g_e_._D_i_s_p_o_s_e.

EEXXAAMMPPLLEE
       PROCEDURE ExecShell(cmd: ARRAY OF CHAR);
          VAR
             list: Streams.Stream;
             arglist: SysArgs.Arguments;
       BEGIN
          UnixArgLists.Open(list);
          Write.StringS(list, "sh"); (* command name *)
          UnixArgLists.Next(list); Write.StringS(list, "-c");
          UnixArgLists.Next(list); Write.StringS(list, cmd);
          UnixArgLists.Close(list, arglist);
          SysProcess.Exec("/bin/sh", arglist);
          UntaggedStorage.Dispose(SYSTEM.VAL(Types.UntracedAddress, arglist));
       END ExecShell;


SSEEEE AALLSSOO
       _S_y_s_P_r_o_c_e_s_s_(_3_)        _S_y_s_P_r_o_c_e_s_s_._E_x_e_c  and  _S_y_s_P_r_o_c_e_s_s_._E_x_e_­
                            _c_E_n_v
       _S_y_s_A_r_g_s_(_3_)           definition of _S_y_s_A_r_g_s_._A_r_g_u_m_e_n_t_s
       _U_n_i_x_A_r_g_u_m_e_n_t_s_(_3_)     processing of arguments
       _U_n_t_a_g_g_e_d_S_t_o_r_a_g_e_(_3_)   allocation/deallocation     of     of
                            untagged areas




Release 0.5       Last change: 16 September 1996                1





UnixArgLists(3)        Ulm's Oberon System        UnixArgLists(3)


       _W_r_i_t_e_(_3_)             formatted output for streams

BBUUGGSS
       _S_t_r_e_a_m_s_._S_e_e_k and _S_t_r_e_a_m_s_._T_e_l_l are not valid operations for
       an _U_n_i_x_A_r_g_L_i_s_t_s_._S_t_r_e_a_m.




















































Release 0.5       Last change: 16 September 1996                2


