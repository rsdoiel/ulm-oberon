


Listers(3)             Ulm's Oberon System             Listers(3)


NNAAMMEE
       Listers  -  general  interface  for listers of compilation
       errors

SSYYNNOOPPSSIISS
       TYPE WriteLineProc =
          PROCEDURE (out: Streams.Stream;
                  line: Streams.Stream;
                  lineNumber, lineNumberWidth: Streams.Count;
                  m1begin, m1end, m2begin, m2end: Streams.Count) : BOOLEAN;
       TYPE WriteMsgProc = PROCEDURE (out, msg: Streams.Stream) : BOOLEAN;
       TYPE Interface = POINTER TO InterfaceRec;
       TYPE InterfaceRec =
          RECORD
             (Objects.ObjectRec)
             writeLine: WriteLineProc;
             writeMsg: WriteMsgProc;
          END;

       PROCEDURE Init(out: Streams.Stream; if: Interface);

       PROCEDURE GenListing(out: Streams.Stream; errors: RelatedEvents.Object);


DDEESSCCRRIIPPTTIIOONN
       _L_i_s_t_e_r_s processes events of compilation errors  (see  _C_o_m_­
       _p_i_l_e_r_E_r_r_o_r_s_(_3_))  by  integrating  source excerpts, marking
       relevant parts of the source, and printing error  messages
       using a general interface.

       _I_n_i_t  ties  an  interface  _i_f  to an output stream for the
       listing generation. The interface is expected to meet  the
       specification following:
       _w_r_i_t_e_L_i_n_e:     PPRROOCCEEDDUURREE(_o_u_t:     _S_t_r_e_a_m_s_._S_t_r_e_a_m;    _l_i_n_e:
            _S_t_r_e_a_m_s_._S_t_r_e_a_m;     _l_i_n_e_N_u_m_b_e_r,      _l_i_n_e_N_u_m_b_e_r_W_i_d_t_h:
            _S_t_r_e_a_m_s._C_o_u_n_t;   _m_1_b_e_g_i_n,   _m_1_e_n_d,   _m_2_b_e_g_i_n,  _m_2_e_n_d:
            _S_t_r_e_a_m_s_._C_o_u_n_t) : BBOOOOLLEEAANN;
            print line number _l_i_n_e_N_u_m_b_e_r with a maximal width  of
            _l_i_n_e_N_u_m_b_e_r_W_i_d_t_h,  print  one line of source text from
            _l_i_n_e, a sub-stream (see  _S_u_b_S_t_r_e_a_m_s_(_3_))  representing
            just  one  line,  and mark the stretches specified by
            the relative positions [[_m_1_b_e_g_i_n, _m_1_e_n_d)) and [[_m_2_b_e_g_i_n,
            _m_2_e_n_d)).   Stretches  are to be ignored if their rela­
            tive positions equal --11.  FFAALLSSEE is to be returned  in
            case of errors.
       _w_r_i_t_e_M_s_g:      PPRROOCCEEDDUURREE(_o_u_t:     _S_t_r_e_a_m_s_._S_t_r_e_a_m;     _m_s_g:
            _S_t_r_e_a_m_s_._S_t_r_e_a_m) : BBOOOOLLEEAANN;
            copy  error  message  from  _m_s_g  to  _o_u_t.  Note  that
            _w_r_i_t_e_M_s_g  is  free  to integrate textual marks within
            the error message if this was not done by  _w_r_i_t_e_L_i_n_e.
            In this case, the relative positions passed before to
            _w_r_i_t_e_L_i_n_e must be preserved  using  disciplines  (see
            _D_i_s_c_i_p_l_i_n_e_s_(_3_))  that  are  attached  to  the  output
            stream.  FFAALLSSEE is to be returned in case of errors.



Release 0.5          Last change: 29 May 2000                   1





Listers(3)             Ulm's Oberon System             Listers(3)


       If _I_n_i_t is not called for  an  output  stream,  a  default
       implementation  will  be  used instead that is not able to
       mark stretches.

       _G_e_n_L_i_s_t_i_n_g extracts all error events that are an extension
       of  _C_o_m_p_i_l_e_r_E_r_r_o_r_s_._E_r_r_o_r_E_v_e_n_t  from  _e_r_r_o_r_s  using _C_o_m_p_i_l_­
       _e_r_E_r_r_o_r_s_._G_e_t_S_o_r_t_e_d_E_r_r_o_r_s and prints them in an  integrated
       form, using the interface passed to _I_n_i_t previously:

       ·      Nothing is printed in case of no errors.

       ·      All source lines referenced by error events will be
              printed immediately before the error message.

       ·      Repeatition of source lines will be avoided in case
              of multiple errors that share the same locations.

       ·      Byte  positions  will be printed instead if sources
              cannot be opened for reading.

DDIIAAGGNNOOSSTTIICCSS
       _L_i_s_t_e_r_s does not generate  any  error  events  itself  but
       error  events may be raised by underlying stream implemen­
       tations of a source or output stream.

SSEEEE AALLSSOO
       _C_o_m_p_i_l_e_r_E_r_r_o_r_s_(_3_)    standardized events  for  compilation
                            errors
       _T_e_r_m_i_n_a_l_L_i_s_t_e_r_s_(_3_)   implementation  of _L_i_s_t_e_r_s_(_3_) that is
                            based upon _T_e_r_m_i_n_a_l_s_(_3_)



























Release 0.5          Last change: 29 May 2000                   2


