UnixArchives(3)               Ulm's Oberon System              UnixArchives(3)



[1mNAME[0m
       UnixArchives - stream input from archives

[1mSYNOPSIS[0m
       CONST arnamelength = 14;

       TYPE MemberName = ARRAY arnamelength+1 OF CHAR;
       TYPE ArchiveHeader =
          RECORD
             name: MemberName;      (* name of archive member *)
             date: SysTypes.Time;   (* in seconds since Jan 1, 1970 *)
             uid, gid: INTEGER;     (* user and group id *)
             mode: SET;             (* protection mode, see SysStat(3) *)
             size: SysTypes.Offset; (* size in bytes *)
          END;
       TYPE Archive = POINTER TO ArchiveRec;
       TYPE ArchiveRec =
          RECORD
             (Streams.StreamRec)
             (* readonly stat information of current archive member *)
             header: ArchiveHeader;
          END;

       (* error codes *)
       CONST notAnArchiveFile = 0;     (* magic header not found *)
       CONST corruptedArchive = 1;     (* corrupted archive file *)
       CONST memberNotFound = 2;       (* archive member file not found *)
       CONST outOfRange = 3;           (* seek failure: position out of range *)
       CONST readFailed = 4;           (* unexpected read failure *)
       CONST seekFailed = 5;           (* unexpected seek failure *)
       CONST tellFailed = 6;           (* unexpected tell failure *)
       CONST errorcodes = 7;           (* number of error codes *)
       TYPE ErrorCode = SHORTINT;      (* 0..errorcodes-1 *)
       TYPE Event = POINTER TO EventRec;
       TYPE EventRec =
          RECORD
             (Events.EventRec)
             stream: Archive;
             code: ErrorCode;
          END;
       VAR errormsg: ARRAY errorcodes OF Events.Message;
       VAR streamError: Events.EventType;

       PROCEDURE Open(VAR archive: Streams.Stream;
                      arname: ARRAY OF CHAR;
                      membername: ARRAY OF CHAR;
                      errors: RelatedEvents.Object) : BOOLEAN;
       PROCEDURE Reopen(archive: Streams.Stream;
                        membername: ARRAY OF CHAR) : BOOLEAN;


[1mDESCRIPTION[0m
       [4mUnixArchives[24m supports stream input from archives in common archive file
       format.  This archive file format is supported by UNIX System V and BSD
       systems.   The  minor  difference between UNIX System V and BSD systems
       (filenames are "/"-terminated in UNIX System V) is tolerated.  Archives
       from UNIX Edition VII cannot be read.

       [4mOpen[24m  opens  [4marname[24m([4mmembername[24m)  for reading.  If [4mmembername[24m equals "",
       the first member of the archive will be opened for reading.  [4mOpen[24m fails
       if  [4marname[24m cannot be opened or if [4mmembername[24m cannot be found (or if the
       archive is empty).  [4mReopen[24m may be called to read another archive member
       of an already opened archive stream.  If [4mmembername[24m equals "", the next
       member of the archive will be opened for reading.  [4mReopen[24m fails if [4mmem-[0m
       [4mbername[24m  cannot be found or at the end of the archive.  It is important
       to note that [4mReopen[24m does not close the stream in case of failures.

       [4mUnixArchives[24m maintains an  incremental  internal  member  list  of  the
       archive  which avoids rescanning of the archive in case of [4mReopen[24m.  The
       main goal of [4mUnixArchives[24m is to support reading of [4mREF[24m and [4mSYM[24m  archive
       files.   In  this case it is very useful to maintain a list of archives
       which are opened with [4mmembername[24m "" during initialization  time.   When
       an  archive  member is sought for, the list of archives can be examined
       until the first [4mReopen[24m succeeds.

[1mEXAMPLE[0m
       Print all archive member names of a given archive:

       PROCEDURE ListArchive(archive: ARRAY OF CHAR);
          VAR
             ar: Streams.Stream;
       BEGIN
          IF UnixArchives.Open(ar, archive, "", NIL) THEN
             REPEAT
                Write.Line(ar.header.name);
             UNTIL ~UnixArchives.Reopen(ar, "");
             Streams.Release(ar);
          END;
       END ListArchive;


[1mDIAGNOSTICS[0m
       [4mOpen[24m passes the [4merrors[24m parameter together with an error event  of  type
       [4mstreamError[24m  to [4mRelatedEvents[24m in case of errors.  Further, [4mOpen[24m returns
       [1mFALSE [22mon failure.

       Errors during the access of the stream are  converted  into  events  of
       [4mRelatedEvents[24m.  By default, these events are being queued.

       Error  events  which  are  generated by [4mUnixArchives[24m contain one of the
       error codes following:
       [4mnotAnArchiveFile[24m   The magic string of archives at the beginning of the
                          file has not been found.
       [4mcorruptedArchive[24m   An  archive  member header cannot be read or is cor-
                          rupted.
       [4mmemberNotFound[24m     The given member name (# "") cannot be found in  the
                          given archive.
       [4moutOfRange[24m         Seek  position  is negative or beyond the end of the
                          archive member.
       [4mreadFailed[24m         A read operation failed unexpectantly.
       [4mseekFailed[24m         A seek operation failed unexpectantly.
       [4mtellFailed[24m         A tell operation failed unexpectantly.

[1mSEE ALSO[0m
       [4mar(1)[24m              maintaining of archives
       [4mRelatedEvents(3)[24m   error event handling
       [4mStreams(3)[24m         stream operations
       [4mSysStat(3)[24m         protection modes
       [4mar(3head)[24m          archive file format

[1mBUGS[0m
       The BSD version of archive  files  uses  trailing  blanks  as  filename
       delimiter.   Thus  filenames with trailing blanks are extracted without
       trailing blanks.

       Archive member names are restricted to 14 characters even on file  sys-
       tems which support longer names.



Release 0.5                Last change: 7 March 2005           UnixArchives(3)
