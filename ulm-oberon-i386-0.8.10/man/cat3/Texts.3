Texts(3)                      Ulm's Oberon System                     Texts(3)



[1mNAME[0m
       Texts - in-memory streams

[1mSYNOPSIS[0m
       CONST posBeyondCurrentLength = 0;
       CONST invalidTruncPos = 1;
       CONST errors = 2;
       TYPE ErrorEvent = POINTER TO ErrorEventRec;
       TYPE ErrorEventRec =
          RECORD
             (Events.EventRec)
             errorcode: SHORTINT;
          END;
       VAR errormsg: ARRAY errors OF Events.Message;
       VAR error: Events.EventType;

       TYPE Text = POINTER TO TextRec;
       TYPE TextRec = RECORD (Streams.StreamRec) END;

       PROCEDURE Open(VAR text: Streams.Stream);


[1mDESCRIPTION[0m
       [4mTexts[24m  realizes  in-memory  streams  which  can  be utilized as dynamic
       strings.  [4mTexts[24m supports all operations of [4mStreams[24m but does not  permit
       holes.  [4mOpen[24m opens a buffered in-memory stream for reading and writing.
       The returned stream is of type [4mTexts.Text[24m.

[1mDIAGNOSTICS[0m
       By default, error events for text  streams  are  being  queued.   Write
       operations  fail never and read operations return [1mFALSE [22monly at the end
       of the current text buffer.  Seek and trunc positions may fail  due  to
       invalid positions:
       [4mposBeyondCurrentLength[24m   Negative  seek  positions and positions beyond
                                the current length are invalid  because  [4mTexts[0m
                                does not support holes.
       [4minvalidTruncPos[24m          The  trunc  position  must be non-negative and
                                the current position must not be subject to  a
                                trunc operation.

[1mSEE ALSO[0m
       [4mRelatedEvents(3)[24m   error handling
       [4mStreams(3)[24m         stream operations
       [4mStrings(3)[24m         string to stream conversions



Release 0.5                Last change: 10 July 2003                  Texts(3)
