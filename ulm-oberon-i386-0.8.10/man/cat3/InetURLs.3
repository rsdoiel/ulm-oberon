


InetURLs(3)            Ulm's Oberon System            InetURLs(3)


NNAAMMEE
       InetURLs - abstraction to handle Uniform Resource Locators

SSYYNNOOPPSSIISS
       TYPE URL = POINTER TO URLRec;
       TYPE URLRec =
          RECORD
             (Disciplines.ObjectRec)
             scheme: Streams.Stream;
          END;

       TYPE AssignProc = PROCEDURE (url: URL; s: Streams.Stream): BOOLEAN;
       TYPE ToStringProc = PROCEDURE (url: URL; VAR stringURL: ARRAY OF CHAR);
       Interface = POINTER TO InterfaceRec;
       InterfaceRec =
          RECORD
             assign: AssignProc;
             toString: ToStringProc;
          END;

       PROCEDURE Init(url: URL; if: Interface);
       PROCEDURE Assign(url: URL; s: Streams.Stream): BOOLEAN;
       PROCEDURE ToString(url: URL; VAR stringURL: ARRAY OF CHAR);


DDEESSCCRRIIPPTTIIOONN
       The module _I_n_e_t_U_R_L_s provides an  abstraction  for  Uniform
       Resource  Locators (URLs). It defines the handling and the
       common part of all URLs (the sheme).

   PPrroovviiddiinngg UURRLLss
       Implementations must initialize new instances of web  han≠
       dlers  using  _I_n_i_t,  specifying an interface _i_f containing
       following procedures. Only the _A_s_s_i_g_n procedure  needs  to
       be implemented.  _T_o_S_t_r_i_n_g is optional.
       _a_s_s_i_g_n: PPRROOCCEEDDUURREE(_u_r_l: _U_R_L; _s: _S_t_r_e_a_m_s_._S_t_r_e_a_m) : BBOOOOLLEEAANN;
            assigns the Stream _s to the URL. The Stream is parsed
            from the actual position to EEOOFF, or  until  the  next
            space,  tab,  or newline is reached. The elements are
            stored  in  _u_r_l.  Escaped  characters  remain   still
            escaped.   _s  must  be  able  to  handle  substreams.
            '_A_s_s_i_g_n' will return FFAALLSSEE if _u_r_l doesn`t conform  to
            the  URL  expected  (e.g.  a  stored FTP-URL can`t be
            parsed as a  HTTP-URL). FFAALLSSEE will also  returned  if
            there  are  other  syntactical errors. Related events
            raised to _u_r_l closer describe the errors.
       _t_o_S_t_r_i_n_g: PPRROOCCEEDDUURREE(_u_r_l:  _U_R_L;  VVAARR  _s_t_r_i_n_g_U_R_L:  AARRRRAAYY  OOFF
            CCHHAARR);
            combines  the  parts of an URL to a string. Necessary
            fill characters will  be  added.  This  Procedure  is
            optional.

   UUssiinngg UURRLLss..
       _A_s_s_i_g_n  parses  the  stream _s and assigns the URL parts to



Release 0.5         Last change: 24 April 1998                  1





InetURLs(3)            Ulm's Oberon System            InetURLs(3)


       separat variables. The parsing starts at the actual  posi≠
       tion of the _s.

       _T_o_S_t_r_i_n_g  combines  all  parts  of  an  URL and provides a
       string.

DDIIAAGGNNOOSSTTIICCSS
       _I_n_e_t_U_R_L_s does not generate error events  by  itself.  Only
       underlying   implementations  raise  errors  as  _R_e_l_a_t_e_d_E_≠
       _v_e_n_t_s_(_3_) to _u_r_l.

SSEEEE AALLSSOO
       _S_t_r_e_a_m_s_(_3_)      stream operations
       _S_u_b_S_t_r_e_a_m_s_(_3_)   Interval of a Stream

AAUUTTHHOORR
       Manfred Rueﬂ, University of Ulm








































Release 0.5         Last change: 24 April 1998                  2


