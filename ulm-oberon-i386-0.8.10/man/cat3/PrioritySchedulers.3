


PrioritySchedulers(3)  Ulm's Oberon System  PrioritySchedulers(3)


NNAAMMEE
       PrioritySchedulers - scheduler with priorities

SSYYNNOOPPSSIISS
       TYPE TaskGroup = POINTER TO TaskGroupRec;
       TYPE TaskGroupRec = RECORD (Schedulers.TaskGroupRec) END;
       TYPE Task = POINTER TO TaskRec;
       TYPE TaskRec = RECORD (Schedulers.TaskRec) END;
       TYPE Priority = INTEGER;

       PROCEDURE CreateTaskGroup(VAR tg: Tasks.TaskGroup);

       PROCEDURE SetPriority(task: Task; priority: Priority);
       PROCEDURE GetPriority(task: Task; VAR priority: Priority);


DDEESSCCRRIIPPTTIIOONN
       _P_r_i_o_r_i_t_y_S_c_h_e_d_u_l_e_r_s  provides a scheduler on base of _S_c_h_e_d_­
       _u_l_e_r_s_(_3_) that supports priorities.

       Each scheduler created  by  _C_r_e_a_t_e_T_a_s_k_G_r_o_u_p  maintains  an
       internal  integer-valued  clock  that starts from 0 and is
       incremented by 1 on each dispatch. The  internal  priority
       of  a  task maintained by _P_r_i_o_r_i_t_y_S_c_h_e_d_u_l_e_r_s is defined to
       be the sum of its external priority (set  by  _S_e_t_P_r_i_o_r_i_t_y,
       is  0  by  default) and the difference between the current
       time and the time the task was executed last.

       The scheduler dispatches always the task that is ready for
       execution  and has the top-most internal priority. In case
       of a tie, the higher external priority wins.

       If all tasks belonging to a task group share the same pri­
       ority, the scheduler behaves identical to _R_o_u_n_d_R_o_b_i_n_(_3_).

       _C_r_e_a_t_e_T_a_s_k_G_r_o_u_p  creates  a task group that is governed by
       _S_c_h_e_d_u_l_e_r_s_(_3_) and _P_r_i_o_r_i_t_y_S_c_h_e_d_u_l_e_r_s.

       _S_e_t_P_r_i_o_r_i_t_y allows to change the priority  of  _t_a_s_k.   The
       current  priority  of  a task maintained by _P_r_i_o_r_i_t_y_S_c_h_e_d_­
       _u_l_e_r_s may be retrieved using _G_e_t_P_r_i_o_r_i_t_y.

DDIIAAGGNNOOSSTTIICCSS
       _P_r_i_o_r_i_t_y_S_c_h_e_d_u_l_e_r_s does not generate any error events.

SSEEEE AALLSSOO
       _P_r_i_o_r_i_t_y_J_o_b_s_(_3_)   variant of _J_o_b_s_(_3_) that  is  based  upon
                         _P_r_i_o_r_i_t_y_S_c_h_e_d_u_l_e_r_s
       _R_o_u_n_d_R_o_b_i_n_(_3_)     simple  round  robin  scheduler  without
                         priorities
       _S_c_h_e_d_u_l_e_r_s_(_3_)     framework for simple schedulers






Release 0.5          Last change: 21 May 2001                   1


