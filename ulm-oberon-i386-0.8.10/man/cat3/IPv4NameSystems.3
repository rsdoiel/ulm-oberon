IPv4NameSystems(3)            Ulm's Oberon System           IPv4NameSystems(3)



[1mNAME[0m
       IPv4NameSystems - import root nodes using IPv4 sockets

[1mSYNOPSIS[0m
       CONST errors = 6;
       CONST colonExpected = 0;
       CONST portExpected = 1;
       CONST invalidPortNumber = 2;
       CONST hostnameExpected = 3;
       CONST unableToFindPort = 4;
       CONST tooManyIndirections = 5;
       TYPE ErrorCode = SHORTINT; (* colonExpected.. *)
       TYPE ErrorEvent = POINTER TO ErrorEventRec;
       TYPE ErrorEventRec =
          RECORD
             (Events.EventRec)
             errorcode: ErrorCode;
             source: ARRAY 128 OF CHAR;
          END;
       VAR error: Events.EventType;
       VAR errormsg: ARRAY errors OF Events.Message;

       PROCEDURE Import(ipaddr: IPv4Addresses.SocketAddress;
                        VAR root: Names.Node;
                        errors: RelatedEvents.Object) : BOOLEAN;
       PROCEDURE ImportFrom(source: ARRAY OF CHAR;
                            VAR root: Names.Node;
                            errors: RelatedEvents.Object) : BOOLEAN;

       PROCEDURE Convert(source: ARRAY OF CHAR;
                         VAR address: Networks.Address;
                         errors: RelatedEvents.Object) : BOOLEAN;


[1mDESCRIPTION[0m
       [4mIPv4NameSystems[24m  is  based  upon  [4mNamesBootService(3)[24m  and supports the
       import of a root node using an IPv4 socket.

       [4mImport[24m allows the direct  specification  of  an  IPv4  address  whereas
       [4mImportFrom[24m accepts a specification which can be either

       ·      a  fully  qualified  host name for which A records can be found,
              followed by a colon and a port number, or

       ·      an IPv4 address in the dotted decimal notation,  followed  by  a
              colon and a port number, or

       ·      a  domain name for which a TXT record can be found that provides
              an ``ons'' attribute  according  to  RFC  1464.  In  this  case,
              [4mImportFrom[24m works recursively with the attribute value found.  At
              maximum three indirections are accepted.

       [4mConvert[24m converts a specification as described above for  [4mImportFrom[24m  to
       be converted into a network address that can be passed on to [4mNamesBoot-[0m
       [4mService(3)[24m.

[1mDIAGNOSTICS[0m
       Following error events are possibly generated by [4mIPv4NameSystems[24m:
       [4mcolonExpected[24m         A colon was expected but not found in the  speci-
                             fication.
       [4mportExpected[24m          A  port  number was expected but not found in the
                             specification.
       [4minvalidPortNumber[24m     The port number was out of range.
       [4mhostnameExpected[24m      The specification was empty.
       [4munableToFindPort[24m      Just a domain name was given in the specification
                             and a TXT record could not be obtained.
       [4mtooManyIndirections[24m   The  upper  limit  of  three indirections for TXT
                             record references was exceeded.

       In addition, error events can be expected by  the  underlying  modules.
       This  includes  mainly  events  from [4mDNSResolvers(3)[24m and of [4mInetTCP(3)[24m.
       All error events are related to the [4merrors[24m parameters.

[1mSEE ALSO[0m
       [4mNamesBootService(3)[24m   service that provides the  address  of  the  root
                             object at a known location.



Release 0.5             Last change: 22 September 2004      IPv4NameSystems(3)
