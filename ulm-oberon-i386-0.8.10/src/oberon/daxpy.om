MODULE daxpy;

   IMPORT ASCII, RandomGenerators, SysTime, Write;

   PROCEDURE CPUTime() : REAL;
   BEGIN
      RETURN SysTime.CPUTime(TRUE) / SysTime.GetUnitsPerSecond();
   END CPUTime;

   PROCEDURE daxpy(n: INTEGER; alpha: REAL;
                   VAR x: ARRAY OF REAL; incX: INTEGER;
		   VAR y: ARRAY OF REAL; incY: INTEGER);
      VAR
	 i, iX, iY: INTEGER;
   BEGIN
      i := 0; iX := 0; iY := 0;
      WHILE i < n DO
	 y[iY] := y[iY] + alpha * x[iX];
	 INC(i); INC(iX, incX); INC(iY, incY);
      END;
   END daxpy;

   PROCEDURE TestIt;
      CONST length = 10000000;
      CONST iterations = 100;
      VAR
	 x, y: ARRAY length OF REAL;
	 i, k: INTEGER;
	 size: INTEGER;
	 secs: REAL;
   BEGIN
      i := 0;
      WHILE i < length DO
	 x[i] := RandomGenerators.RealVal();
	 y[i] := RandomGenerators.RealVal();
	 INC(i);
      END;
      size := 100;
      WHILE size <= length DO
	 Write.Int(size, 8);
	 secs := CPUTime(); (* reset clock *)
	 k := 1;
	 WHILE k <= 100 DO
	    daxpy(size, 1.5, x, 1, y, 1);
	    INC(k);
	 END;
	 size = size * 10;
	 Write.Real(CPUTime(), 12);
	 Write.Ln;
	 size = size * 10;
      END;
   END TestIt;

BEGIN
   TestIt;
END daxpy.
